--[[
 __________   __    __   __    __    __      __    __      __    _________    _            _    __________
/        //  /  /  /  / /  /  /  /  /  /    /  /  /  /    /  /  /   ____  /  \ \          / /  /        //
/  ______//  /  / /  /  /  / /  /   /  /____/  /  /  /    /  /  /  /____/ /   \ \        / /   /______  //
/        //  /  //  /   /  //  /    /   ____   /  /  /    /  /  /_________/    \ \      / /    /        //
/_____   //  /  /\  \   /  /\  \    /  /    /  /  /  /    /  /  /   ____  \     \ \    / /     /   _____//
/        //  /  / \  \  /  / \  \   /  /    /  /  /  /____/  /  /  /____/ /      \ \  / /      /        //
/________//  /__/  \__\ /__/  \__\  /__/    /__/  /__________/  /_________/       \_\/_/       /________//
]]--
do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (v0==4) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v0=5;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (v0==3) then v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=4;end if (v0==5) then v16=nil;v16=function(v20,v21,...)local v27=1;local v28;v20=v5(v4(v20,5),"..",function(v29)if (v2(v29,2)==79) then local v78=0;while true do if (v78==0) then v28=v1(v4(v29,1,1));return "";end end else local v79=0;local v80;while true do if (0==v79) then v80=v3(v1(v29,16));if v28 then local v103=v6(v80,v28);v28=nil;return v103;else return v80;end break;end end end end);local function v30(v31,v32,v33)if v33 then local v81=(v31/((2 + 0)^(v32-((3201 -1230) -(1175 + 795)))))%((2 + 0)^(((v33-(1470 -(390 + 1079))) -(v32-(4 -3))) + 1)) ;return v81-(v81%(1209 -(587 + 621))) ;else local v82=0 -(0 + 0) ;local v83;while true do if (v82==(1522 -(964 + (2518 -(625 + 1335))))) then v83=2^(v32-(2 -1)) ;return (((v31%(v83 + v83))>=v83) and 1) or 0 ;end end end end local function v34()local v47=(0 + 0) -0 ;local v48;while true do if (v47==(1 + 0)) then return v48;end if (v47==(188 -(166 + 22))) then v48=v2(v20,v27,v27);v27=v27 + (905 -(629 + 275)) ;v47=1 -0 ;end end end local function v35()local v49,v50=v2(v20,v27,v27 + 2 + 0 );v27=v27 + 1 + 1 ;return (v50 * (724 -468)) + v49 ;end local function v36()local v51,v52,v53,v54=v2(v20,v27,v27 + 3 );v27=v27 + 1 + 3 ;return (v54 * ((27071764 -10294321) -(66 + 161))) + (v53 * ((96490 -29168) -(895 + 891))) + (v52 * ((341 + 333) -418)) + v51 ;end local function v37()local v55=0 -0 ;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v55==(862 -((566 -236) + 531))) then v58=(1729 -(901 + 827)) + 0 ;v59=(v30(v57,1 + 0 ,54 -34 ) * (((1749 -(58 + 1689)) + 0)^((7 + 61) -36))) + v56 ;v55=131 -(119 + 10) ;end if (v55==(1669 -(723 + 943))) then if (v60==((3300 -1832) -(197 + 1271))) then if (v59==(0 -(0 + 0))) then return v61 * (986 -(752 + 234)) ;else v60=534 -(246 + 287) ;v58=0 -(0 -0) ;end elseif (v60==(2712 -(442 + 223))) then return ((v59==(0 -0)) and (v61 * ((2 -1)/(287 -(183 + 104))))) or (v61 * NaN) ;end return v9(v61,v60-(823 + 200) ) * (v58 + (v59/(2^(99 -47)))) ;end if (v55==(1 + 1)) then v60=v30(v57,(24 -17) + 14 ,13 + 18 );v61=((v30(v57,1183 -(1086 + 65) )==1) and  -((251 -(174 + 76)) + 0)) or 1 ;v55=3;end if ((0 -0)==v55) then v56=v36();v57=v36();v55=1 + 0 ;end end end local function v38(v39)local v62=0 -0 ;local v63;local v64;while true do if (v62==(2 -0)) then v64={};for v90=1 + 0 , #v63 do v64[v90]=v3(v2(v4(v63,v90,v90)));end v62=(9 + 1) -7 ;end if (v62==(0 + 0)) then v63=nil;if  not v39 then local v98=1661 -((2230 -958) + (993 -604)) ;while true do if (v98==0) then v39=v36();if (v39==(0 -0)) then return "";end break;end end end v62=1708 -(463 + (4622 -3378)) ;end if (v62==(2 + 1)) then return v7(v64);end if ((2 -1)==v62) then v63=v4(v20,v27,(v27 + v39) -((337 + 752) -(492 + 596)) );v27=v27 + v39 ;v62=2;end end end local v40=v36;local function v41(...)return {...},v13("#",...);end local function v42()local v65=0;local v66;local v67;local v68;local v69;local v70;local v71;local v72;local v73;while true do if (v65==3) then local v84=0;while true do if (v84==0) then v72=nil;v73=nil;v84=1 + 0 ;end if (v84~=(1 + 0)) then else v65=4;break;end end end if (v65==1) then local v85=0 + 0 ;while true do if (v85~=1) then else v65=2;break;end if (v85==(0 + 0)) then v68=nil;v69=nil;v85=212 -(10 + 201) ;end end end if (v65==(1073 -(507 + 562))) then while true do if ((705 -(693 + 9))==v66) then v73=nil;while true do local v104=0;local v105;while true do if (v104~=(0 -0)) then else v105=0 + 0 ;while true do if (v105==1) then if (v67~=1) then else local v125=0 + 0 ;local v126;while true do if (v125==(0 + 0)) then v126=0;while true do if ((1 + 0)~=v126) then else local v135=0;while true do if (1~=v135) then else v126=2;break;end if (v135==0) then local v145=0 -0 ;while true do if (0==v145) then for v275=1 + 0 ,v72 do local v276=0;local v277;local v278;local v279;while true do if (1==v276) then v279=nil;while true do if (v277~=(1290 -(581 + 708))) then else if (v278==1) then v279=v34()~=0 ;elseif (v278==(1 + 1)) then v279=v37();elseif (v278==(10 -7)) then v279=v38();end v73[v275]=v279;break;end if (0==v277) then local v337=0;while true do if (v337==(0 + 0)) then v278=v34();v279=nil;v337=1;end if (v337~=1) then else v277=739 -(255 + 483) ;break;end end end end break;end if (0==v276) then local v297=0;while true do if ((2 -1)~=v297) then else v276=1 + 0 ;break;end if (v297==(1451 -(519 + 932))) then v277=0 + 0 ;v278=nil;v297=1;end end end end end v71[3]=v34();v145=1;end if (v145==1) then v135=1;break;end end end end end if (0==v126) then local v136=0 -0 ;while true do if (v136~=0) then else v72=v36();v73={};v136=1;end if (v136~=1) then else v126=785 -(578 + 206) ;break;end end end if (v126==2) then v67=1 + 1 ;break;end end break;end end end break;end if (v105==0) then if (v67==(0 -0)) then local v127=0;while true do if (v127==2) then v67=898 -(466 + 431) ;break;end if (v127==1) then v70={};v71={v68,v69,nil,v70};v127=78 -(70 + 6) ;end if (v127~=0) then else local v131=1674 -(274 + 1400) ;while true do if (v131==1) then v127=1;break;end if (v131==(0 -0)) then v68={};v69={};v131=1;end end end end end if (2==v67) then local v128=0;while true do if (v128==(86 -(13 + 73))) then local v132=1903 -(1044 + 859) ;while true do if (v132~=(1918 -(1790 + 128))) then else for v138=1 -0 ,v36() do local v139=0 + 0 ;local v140;local v141;local v142;while true do if (v139==(1 + 0)) then v142=nil;while true do if (v140==0) then local v280=270 -(113 + 157) ;while true do if (v280~=(1513 -(34 + 1478))) then else v140=1 + 0 ;break;end if (v280==0) then v141=0;v142=nil;v280=1;end end end if (v140==1) then while true do if (v141~=0) then else v142=v34();if (v30(v142,1 + 0 ,1793 -(854 + 938) )==0) then local v309=0;local v310;local v311;local v312;while true do if (v309==3) then if (v30(v311,3,1377 -(116 + 1258) )==1) then v312[4 -0 ]=v73[v312[4 + 0 ]];end v68[v138]=v312;break;end if (v309==1) then local v367=557 -(323 + 234) ;while true do if (v367==(1 + 0)) then v309=2;break;end if (v367~=0) then else local v415=0 -0 ;while true do if (v415~=0) then else v312={v35(),v35(),nil,nil};if (v310==0) then local v447=0;local v448;local v449;while true do if (v447==(1550 -(151 + 1399))) then v448=0;v449=nil;v447=2 -1 ;end if (v447==1) then while true do if (v448==0) then v449=0 + 0 ;while true do if (v449==(1408 -(981 + 427))) then v312[3]=v35();v312[1491 -(738 + 749) ]=v35();break;end end break;end end break;end end elseif (v310==1) then v312[1857 -(597 + 1257) ]=v36();elseif (v310==(2 + 0)) then v312[2 + 1 ]=v36() -(2^(643 -(169 + 458))) ;elseif (v310~=(2 + 1)) then else local v475=218 -(63 + 155) ;local v476;local v477;while true do if (v475==(0 + 0)) then v476=0 -0 ;v477=nil;v475=1;end if (v475~=(1 -0)) then else while true do if (v476==0) then v477=0;while true do if (v477~=(0 -0)) then else v312[3]=v36() -((3 -1)^(10 + 6)) ;v312[8 -4 ]=v35();break;end end break;end end break;end end end v415=1;end if (v415~=1) then else v367=1 -0 ;break;end end end end end if (v309==(2 + 0)) then local v368=0 -0 ;while true do if (v368~=0) then else local v416=0;while true do if (0==v416) then if (v30(v311,4 -3 ,1)~=1) then else v312[1 + 1 ]=v73[v312[2 + 0 ]];end if (v30(v311,2 + 0 ,38 -(33 + 3) )~=1) then else v312[3]=v73[v312[2 + 1 ]];end v416=640 -(198 + 441) ;end if (v416==1) then v368=1 + 0 ;break;end end end if (v368==1) then v309=3;break;end end end if (v309~=0) then else v310=v30(v142,2,3);v311=v30(v142,4,6);v309=961 -(183 + 777) ;end end end break;end end break;end end break;end if (v139==(143 -(11 + 132))) then v140=366 -(225 + 141) ;v141=nil;v139=1 + 0 ;end end end for v143=1 + 0 ,v36() do v69[v143-(1 + 0) ]=v42();end v132=3 -2 ;end if (1==v132) then v128=32 -(29 + 2) ;break;end end end if (v128~=1) then else local v133=0 + 0 ;local v134;while true do if (v133~=0) then else v134=0;while true do if (v134~=0) then else local v146=0 + 0 ;while true do if (v146==0) then for v281=1,v36() do v70[v281]=v36();end return v71;end end end end break;end end end end end v105=1;end end break;end end end break;end if (2==v66) then local v99=0;while true do if (v99~=0) then else v71=nil;v72=nil;v99=1;end if (1~=v99) then else v66=14 -11 ;break;end end end if (v66==0) then local v100=0;local v101;while true do if (v100==(1774 -(596 + 1178))) then v101=0;while true do if (v101==0) then local v124=0 + 0 ;while true do if (v124==(728 -(478 + 250))) then v67=0 + 0 ;v68=nil;v124=812 -(304 + 507) ;end if (v124==1) then v101=217 -(34 + 182) ;break;end end end if (v101~=1) then else v66=1141 -(493 + 647) ;break;end end break;end end end if ((1514 -(583 + 930))==v66) then local v102=0;while true do if (v102==(0 -0)) then v69=nil;v70=nil;v102=1;end if (v102==1) then v66=2 -0 ;break;end end end end break;end if (0==v65) then v66=0 -0 ;v67=nil;v65=1;end if ((270 -(87 + 181))==v65) then local v86=0;while true do if ((1 + 0)==v86) then v65=3 + 0 ;break;end if (v86==(0 -0)) then v70=nil;v71=nil;v86=2 -1 ;end end end end end local function v43(v44,v45,v46)local v74=0;local v75;local v76;local v77;while true do if (v74==1) then v77=v44[3];return function(...)local v92=0;local v93;local v94;local v95;local v96;local v97;while true do if (v92==0) then v93=1;v94= -1;v92=1;end if (v92==1) then v95={...};v96=v13("#",...) -1 ;v92=2;end if (v92==2) then v97=nil;v97=function()local v106=v75;local v107=v76;local v108=v77;local v109=v41;local v110={};local v111={};local v112={};for v116=0,v96 do if (((10 + 6 + 2571)<(16170 -11887)) and (v116>=v108)) then v110[v116-v108 ]=v95[v116 + 1 ];else v112[v116]=v95[v116 + (1812 -(608 + 1203)) ];end end local v113=(v96-v108) + (3 -2) ;local v114;local v115;while true do local v117=839 -(607 + 232) ;local v118;while true do if ((v117==(1681 -(846 + (1226 -(254 + 137))))) or ((113 + 449)>=(4922 -(1340 + 494)))) then v118=56 -(33 + 23) ;while true do if ((v118==1) or ((1894 + 942)<=(1241 + 161))) then if ((v115<=24) or ((2189 -(709 + 287 + 181))<(505 + 244))) then if ((v115<=(20 -9)) or (200>=(8064 -5196))) then if ((v115<=(19 -14)) or ((839 + 317)>=(12903 -8532))) then if ((v115<=2) or (((1692 -(459 + 167)) + 69)>=(1 + 3866))) then if ((v115<=(0 + 0)) or (774>(6195 -4395))) then v112[v114[975 -(98 + 875) ]][v114[8 -5 ]]=v112[v114[18 -14 ]];elseif ((v115>1) or ((6775 -(10511 -7388))<(27 + 370))) then if ((v112[v114[1763 -(867 + 894) ]]~=v114[13 -9 ]) or ((5468 -(153 + 371))<=(1208 -768))) then v93=v93 + 1 ;else v93=v114[227 -(154 + 70) ];end else local v184=0 + (850 -(749 + 101)) ;local v185;local v186;while true do if ((v184==(1226 -(665 + 561))) or ((3156 -(895 + 255))<(3313 -2418))) then v185=0 + 0 ;v186=nil;v184=(2077 -1376) -(264 + 436) ;end if (((5791 -(3782 -(1565 + 88)))>=2469) and (v184==1)) then while true do if ((v185==(0 + (0 -0))) or ((832 + 97)>=(16307 -11558))) then v186=v114[7 -5 ];v112[v186](v14(v112,v186 + 1 + 0 ,v114[3]));break;end end break;end end end elseif (((4851 -(1460 + 458))>(1545 + 435)) and (v115<=(1164 -(398 + (1470 -707))))) then do return v112[v114[2]];end elseif ((v115==(15 -11)) or (2858==(4533 -(1699 + 32)))) then for v283=v114[1 + 1 ],v114[3] do v112[v283]=nil;end else v112[v114[4 -2 ]]=v114[3 -(1539 -(1086 + 453)) ]~=(893 -(531 + 362)) ;end elseif ((v115<=(16 -8)) or ((2622 -987)>=(5599 -(191 + (1904 -(326 + 354)))))) then if ((v115<=(5 + 1)) or ((3248 -2259)<112)) then local v151=0;local v152;local v153;local v154;while true do if ((v151==(0 + 0)) or (((7463 -(773 + 482)) -(749 + (2701 -1597)))<(8256 -5186))) then v152=1116 -(306 + 810) ;v153=nil;v151=84 -(36 + 47) ;end if ((1==v151) or ((992 + 2923)<(4162 -(1112 + 768)))) then v154=nil;while true do if ((v152==(1 + 0)) or (((936 + 4840) -(116 + 1071))==(3559 + 523))) then while true do if ((v153==(658 -(143 + 335 + 180))) or ((1882 -(244 + 1635))>4323)) then v154=v114[2 -0 ];v112[v154](v112[v154 + (1 -0) ]);break;end end break;end if ((v152==(0 + 0)) or ((4765 -(681 + 989))==2402)) then local v298=1722 -(377 + 1345) ;while true do if (((794 + 184)<=3107) and (v298==(1 + 0))) then v152=1;break;end if ((v298==(0 + 0)) or ((861 + 234)<(545 + 94))) then v153=(0 -0) -0 ;v154=nil;v298=2 -1 ;end end end end break;end end elseif ((v115==(13 -6)) or ((504 + 758)<=(2341 -1081))) then v112[v114[2]]={};elseif (((5913 -(303 + 1064))>=(930 -(359 + 352))) and v112[v114[5 -(6 -3) ]]) then v93=v93 + 1 + 0 ;else v93=v114[1414 -(358 + 1053) ];end elseif ((v115<=9) or (4435<1201)) then v112[v114[735 -(556 + 177) ]]=v112[v114[116 -(5 + 7 + 101) ]]%v112[v114[4]] ;elseif (((346 + 1370)>(1452 -(317 + 750))) and (v115==(27 -17))) then local v189=(1864 -(419 + 1445)) -0 ;local v190;local v191;while true do if (((4110 -3175)>423) and (v189==(1897 -(803 + 1094)))) then v190=0;v191=nil;v189=(2 + 0) -1 ;end if ((v189==(3 -2)) or ((2430 + 1586)<(2138 -(13 + 1409)))) then while true do if ((v190==(735 -(142 + 593))) or ((1852 -(608 + 254))>=(2467 -(87 + 121)))) then v191=v114[5 -(11 -8) ];v112[v191]=v112[v191](v14(v112,v191 + 1 + 0 ,v94));break;end end break;end end else local v192=1669 -(1163 + 506) ;local v193;local v194;local v195;while true do if ((v192==(1 + 0)) or ((1822 -((2768 -1632) + 549))>=(4660 -2730))) then v195=nil;while true do if (((777 + 2944)<=3777) and ((182 -(14 + 167))==v193)) then for v339=4 -3 , #v111 do local v340=0;local v341;local v342;while true do if ((v340==(4 -3)) or ((1197 + 1748)>=4756)) then while true do if ((v341==(0 + 0)) or ((719 + (2598 -(20 + 636)))<=(254 + 366))) then v342=v111[v339];for v427=0 + 0 , #v342 do local v428=0;local v429;local v430;local v431;local v432;while true do if (((524 -(7 + 14))>400) and (v428==((1339 -(1315 + 21)) -2))) then local v454=0 -(444 -(277 + 167)) ;while true do if ((v454==1) or ((408 -(35 + 35))>1336)) then v428=1 + (405 -(224 + 180)) ;break;end if (((14354 -10549)>=(278 -177)) and (v454==(1609 -(386 + 1223)))) then v431=nil;v432=nil;v454=1;end end end if ((4479==((4362 -(56 + 539)) + 712)) and (v428==(0 -0))) then local v455=0;while true do if (((9370 -6879)==2491) and (v455==(0 -0))) then v429=0;v430=nil;v455=(3 + 0) -(4 -2) ;end if ((v455==(2 -1)) or ((2713 -(465 + 406))==(2689 -1610))) then v428=1;break;end end end if ((v428==2) or ((3334 -(807 + 110))<=(3494 -(129 + 668 + 924)))) then while true do if ((740<=(3830 -(1713 + 26))) and (v429==(1943 -(400 + 1542)))) then v432=v430[2];if (((v431==v112) and (v432>=v194)) or ((355 + 431)==4070)) then local v474=0 -0 ;while true do if (((497 + 496)<3614) and (v474==(0 -0))) then v195[v432]=v431[v432];v430[1]=v195;break;end end end break;end if (((515 -325)<=(3204 -1580)) and (v429==(0 -(0 + 0)))) then local v469=0 + 0 + 0 ;local v470;while true do if (((1661 -(805 + 856))==v469) or ((41 + 74)==(2837 -(1010 + (2502 -(1412 + 234)))))) then v470=624 -(43 + (1422 -(480 + 361))) ;while true do if ((v470==(0 -(0 + 0))) or ((2732 + 2145)==((229 + 5006) -2822))) then local v483=(3075 -1885) -(843 + 347) ;while true do if ((v483==0) or ((2807 + 2138)<(2102 -(26 + 19)))) then v430=v342[v427];v431=v430[1096 -(105 + 990) ];v483=1 + 0 + 0 ;end if (((8 + 1478)<(8278 -6465)) and (v483==(701 -(443 + 257)))) then v470=1 + 0 ;break;end end end if ((v470==(4 -3)) or ((2010 -(123 + (212 -92)))<=(3238 -1889))) then v429=1 -0 ;break;end end break;end end end end break;end end end break;end end break;end if (((1384 -(987 + 179))<=4757) and (v340==((1802 -(1718 + 84)) -0))) then v341=0;v342=nil;v340=1 -0 ;end end end break;end if ((v193==(0 + (1051 -(335 + 716)))) or ((152 + 41 + 67)>(3545 + (657 -(73 + 140))))) then local v316=0 -0 ;while true do if ((v316==(1858 -(1383 + 474))) or (3456>=4277)) then v193=2 -1 ;break;end if ((v316==0) or (3018<=(2947 -(409 + 260)))) then v194=v114[2];v195={};v316=1 -0 ;end end end end break;end if ((v192==(605 -(293 + 312))) or ((697 + 1873 + 1259)<(2543 -(55 + 11)))) then v193=0 + 0 + 0 ;v194=nil;v192=2 -1 ;end end end elseif (((2156 + 916)<(7701 -4292)) and (v115<=(565 -(153 + 395)))) then if ((v115<=14) or ((9651 -6374)==(9189 -6793))) then if ((v115<=(7 + 5)) or (3708<=(4209 -2691))) then local v156=0 + 0 ;local v157;local v158;local v159;local v160;while true do if (((6464 -4988)>=(1810 -652)) and (v156==(1065 -(107 + 957)))) then v159=nil;v160=nil;v156=2;end if (((4099 -1018)==(1752 + 1329)) and (v156==(435 -(94 + 341)))) then v157=0;v158=nil;v156=245 -(166 + 78) ;end if ((v156==(4 -2)) or ((1201 -((1237 -(413 + 260)) + 106))>=(5232 -(316 + (492 -333))))) then while true do if (((458 + 144)<(3017 -(1437 + 212))) and (v157==((2 + 0) -1))) then local v299=0 -0 ;while true do if ((v299==(1 -0)) or (4760<=(1127 + 2721))) then v157=7 -5 ;break;end if ((v299==(0 + 0)) or ((3142 -(174 + 224))<(124 + 4))) then v160={};v159=v11({},{__index=function(v343,v344)local v358=0 -0 ;local v359;local v360;local v361;while true do if (((287 + (3830 -2540))<=(1963 + 1078)) and (v358==1)) then v361=nil;while true do if ((v359==(0 + 0)) or ((5223 -(982 + 581))<=(2531 -(136 + 437)))) then local v433=0 + 0 ;while true do if ((v433==(1 + (1353 -(1124 + 229)))) or ((39 + 23)>(8941 -5121))) then v359=(1 -0) + 0 ;break;end if (((15355 -12226)>421) and (v433==(0 + 0))) then v360=0 + 0 ;v361=nil;v433=1 -0 ;end end end if (((12 + 74)==((184 + 55) -153)) and (v359==1)) then while true do if ((1736>=(2857 -(345 + 1307))) and (v360==0)) then local v456=0 -0 ;while true do if (((6351 -2812)<(15923 -11861)) and (v456==(0 + 0))) then v361=v160[v344];return v361[1446 -(832 + 613) ][v361[2]];end end end end break;end end break;end if (((8226 -5333)==2893) and ((1448 -(629 + 819))==v358)) then v359=0;v360=nil;v358=1 + 0 ;end end end,__newindex=function(v343,v344,v345)local v362=(1283 -(53 + 1230)) -0 ;local v363;local v364;local v365;while true do if (((0 -0)==v362) or (3364<=2944)) then v363=(970 -(211 + 759)) + 0 ;v364=nil;v362=3 -2 ;end if (((4211 -(160 + 491))<(4621 -(171 + 162 + 364))) and ((1 -0)==v362)) then v365=nil;while true do if (((88 + 284)<=(4073 -((785 -221) + 63))) and (v363==(1 + 0))) then while true do if (((2467 -((486 -382) + 123))==(8436 -6196)) and (v364==(0 -0))) then v365=v160[v344];v365[1 + 0 ][v365[2 + 0 ]]=v345;break;end end break;end if (((1111 -(92 + 511))==(1005 -497)) and (v363==(0 + 0))) then local v434=(1976 -(61 + 1915)) -0 ;while true do if (((3133 -(332 + 589))>(2484 -((1039 -625) + 723))) and (v434==(3 -2))) then v363=(808 -(59 + 748)) + 0 + 0 ;break;end if (((1697 -1124)<=(2246 -(4876 -3845))) and (v434==(881 -(411 + 470)))) then v364=1142 -(400 + 742) ;v365=nil;v434=4 -3 ;end end end end break;end end end});v299=1602 -(920 + 15 + 666) ;end end end if ((v157==2) or ((104 + 182 + 2204)<(1795 -(766 + 601)))) then for v305=177 -(148 + 28) ,v114[13 -9 ] do local v306=0 + (0 -0) ;local v307;local v308;while true do if ((v306==1) or ((974 -396)==(4203 -(173 + (94 -46))))) then while true do if (((2136 -(9 + 10))<=(7378 -4116)) and (v307==0)) then local v412=0;local v413;while true do if (((5 + 24)<(14620 -(11254 -(603 + 224)))) and (v412==(1252 -(158 + 1094)))) then v413=0 + 0 ;while true do if (((2049 -854)<(2401 + 234)) and (v413==(0 + 0))) then local v459=(0 + 0) -0 ;while true do if ((v459==1) or ((2357 + 2577)==1680)) then v413=2 -1 ;break;end if ((0==v459) or ((1 + 9)>=(493 + 451))) then v93=v93 + (853 -(747 + 105)) + 0 ;v308=v106[v93];v459=1 + 0 ;end end end if ((v413==((986 -(82 + 903)) + 0)) or ((5706 -4136)>(3488 -(262 + 94)))) then v307=1244 -(699 + 544) ;break;end end break;end end end if ((v307==((4279 -2304) -(694 + 1280))) or ((357 -171)>=(13248 -9285))) then if (((1478 + 1663)>=(863 -406)) and (v308[2 -(196 -(152 + 43)) ]==(1323 -(517 + 790)))) then v160[v305-1 ]={v112,v308[1 + 2 ]};else v160[v305-(2 -1) ]={v45,v308[3]};end v111[ #v111 + (1156 -(8 + 1147)) ]=v160;break;end end break;end if (((4871 -(90 + 19))>(331 -201)) and (v306==0)) then v307=0 + (1346 -(643 + 703)) ;v308=nil;v306=4 -3 ;end end end v112[v114[2]]=v43(v158,v159,v46);break;end if (((3855 -(272 + 188))>(2167 + 1036)) and (v157==0)) then v158=v107[v114[701 -(566 + 132) ]];v159=nil;v157=1 -0 ;end end break;end end elseif (((5610 -1762)<=4631) and (v115==(51 -38))) then if (((502 -262)<=4393) and (v112[v114[4 -(1 + 1) ]]==v114[3 + 1 ])) then v93=v93 + 1 + (1502 -(760 + 742)) ;else v93=v114[4 -1 ];end else v93=v114[942 -((406 -149) + 682) ];end elseif ((v115<=15) or ((724 + (1019 -489))==(313 -(114 + 69)))) then v112[v114[2]][v112[v114[3]]]=v112[v114[4 + (0 -0) ]];elseif (((6296 -(50 + 1865))>((1441 -(455 + 24)) + 952)) and (v115==((140 + 1) -(98 + 27)))) then v112[v114[2 + 0 ]]=v112[v114[8 -5 ]];else local v199=0;local v200;local v201;while true do if (((843 -348)==(802 -307)) and (v199==0)) then v200=1895 -((721 -(57 + 126)) + 1357) ;v201=nil;v199=4 -3 ;end if (((2294 -((593 -(111 + 43)) + 1252))<(435 + 2039)) and (v199==(2 -(3 -2)))) then while true do if ((v200==(888 -((2605 -(769 + 1046)) + (256 -158)))) or ((503 -334)>(2075 + 2248))) then v201=v114[3 -1 ];v112[v201]=v112[v201](v14(v112,v201 + 1 ,v114[14 -(27 -16) ]));break;end end break;end end end elseif (((771 + 574)>=(56 + 1267)) and (v115<=(14 + (20 -14)))) then if (((38 + 26)<=710) and (v115<=(11 + 7))) then local v163=1370 -(737 + (1476 -843)) ;local v164;while true do if ((((16589 -(59 + 105)) -12050)>(2934 -(71 + 88))) and (v163==(0 + 0))) then v164=v114[2];do return v14(v112,v164,v94);end break;end end elseif ((v115==(28 -9)) or ((3243 -(651 + 382))>3583)) then v112[v114[2]]=v43(v107[v114[1726 -((348 -158) + 1533) ]],nil,v46);else local v203=0 + 0 + 0 ;local v204;local v205;while true do if (((2114 -1156)<3043) and (v203==(1 + 0))) then while true do if ((0==v204) or (((4070 -(394 + 168)) -1267)<(7791 -5922))) then v205=v114[1 + 0 + 1 ];v112[v205]=v112[v205](v112[v205 + (1 -(462 -(29 + 433))) ]);break;end end break;end if (((1547 -(204 + 1153 + 175))<=(2397 + 1885)) and (v203==(0 + 0))) then v204=0 + 0 ;v205=nil;v203=(2658 -(484 + 459)) -(1223 + 491) ;end end end elseif (((365 + 325)==(2318 -1628)) and (v115<=(1096 -(936 + 138)))) then if ((4174==4174) and (v115==(34 -13))) then v112[v114[2]]();else v112[v114[7 -5 ]]=v114[1 + 2 ];end elseif ((v115>23) or ((2446 -(81 + 394))==(3283 -1231))) then local v208=1242 -(746 + 496) ;local v209;local v210;local v211;local v212;local v213;while true do if ((v208==(1861 -(1124 + 737))) or ((4102 -(1914 + 8))<=(1503 -(663 + 154)))) then v209=394 -(344 + 50) ;v210=nil;v208=1063 -(657 + (1030 -625)) ;end if ((v208==(1 + 0)) or (3029<=1283)) then v211=nil;v212=nil;v208=1 + 1 ;end if ((4299>=(953 + 1652)) and (v208==2)) then v213=nil;while true do if ((v209==(0 + 0)) or (((860 + 1280) -1149)<(381 + 144))) then local v321=311 -(99 + 128 + 84) ;while true do if ((((15846 -11845) -(1196 + 412))==2393) and ((0 + 0)==v321)) then v210=v114[1216 -(275 + 939) ];v211,v212=v109(v112[v210](v14(v112,v210 + (2 -1) ,v94)));v321=1;end if ((((7157 -(1218 + 271)) -(234 + 1656))==(4084 -((661 -424) + 69))) and (v321==(3 -2))) then v209=3 -2 ;break;end end end if ((3695>=(2862 -(119 + (738 -(185 + 113))))) and (1==v209)) then v94=(v212 + v210) -(1 -(0 -0)) ;v213=(1443 -(383 + 41)) -(827 + 192) ;v209=(2334 -1706) -((1252 -700) + 74) ;end if ((v209==(3 -1)) or ((9917 -(5581 + 1562))==2219)) then for v346=v210,v94 do local v347=469 -(166 + 303) ;while true do if (((208 -65)==143) and (v347==0)) then v213=v213 + (353 -(236 + 116)) ;v112[v346]=v211[v213];break;end end end break;end end break;end end else v112[v114[2]]=v112[v114[1148 -(286 + 859) ]][v114[2 + 2 ]];end elseif ((v115<=(55 -18)) or (((3242 -(473 + 258)) + 153)<(673 + 98))) then if (((1387 -(196 + 375))>=571) and (v115<=30)) then if ((2603>(2481 -(710 + 56))) and (v115<=(4 + 13 + 10))) then if ((v115<=(15 + 10)) or ((2053 -(634 + 1196))>((6604 -(1056 + 201)) -(603 + 861)))) then v46[v114[9 -6 ]]=v112[v114[1 + 1 ]];elseif (((6154 -((2145 -(1483 + 210)) + 280 + 781))>(1639 + 1022)) and (v115>26)) then local v216=0 -0 ;local v217;local v218;local v219;local v220;local v221;local v222;while true do if (((2596 -(5301 -3428))<=(2120 + 1304)) and (v216==(0 -0))) then v217=0;v218=nil;v216=2 -1 ;end if ((v216==(4 -2)) or ((2869 -2215)<=(4 + 294))) then v221=nil;v222=nil;v216=1217 -(327 + 887) ;end if ((v216==(755 -(14 + 738))) or ((7674 -3423)<=(959 -536))) then while true do if (((2702 -1706)<=(4422 -(1758 + 1125))) and (v217==(1845 -(847 + 166 + 830)))) then v222=nil;while true do if ((v218==(0 + 0)) or ((962 + 23 + 393 + 382)<(178 + 6))) then local v371=0 -(0 + 0) ;local v372;while true do if (((5653 -4157)<=(4094 -(806 + 567))) and (v371==(1399 -(685 + 714)))) then v372=0 -0 ;while true do if (((2420 + 1163)>(555 -(159 + 243))) and (v372==(384 -(73 + 222 + 89)))) then local v438=0 + 0 + 0 ;while true do if ((v438==1) or ((2813 -(92 + 1462))>=(6552 -3195))) then v372=1533 -(395 + 1137) ;break;end if ((v438==(1835 -(605 + 1230))) or (28==(4810 -(954 + 824)))) then v219=v114[88 -((992 -(196 + 787)) + 77) ];v220,v221=v109(v112[v219](v112[v219 + (1 -0) ]));v438=595 -(130 + 464) ;end end end if ((v372==(3 -2)) or ((9086 -5807)>4337)) then v218=(1 + 1) -1 ;break;end end break;end end end if ((v218==2) or (3829==1602)) then for v391=v219,v94 do local v392=0 + 0 ;local v393;local v394;while true do if ((v392==(0 -0)) or (3930<(1300 -(247 + 94)))) then v393=928 -(348 + 580) ;v394=nil;v392=1 + (0 -0) ;end if ((v392==(863 -(20 + 842))) or ((4778 -(444 + 48 + 184))>=(5888 -1422))) then while true do if ((v393==(896 -(688 + 208))) or (2714<(513 + 538))) then v394=16 -(6 + 10) ;while true do if (((4343 -2794)>(1746 -(111 + 439))) and (v394==(1538 -(1126 + 412)))) then v222=v222 + (2 -1) ;v112[v391]=v220[v222];break;end end break;end end break;end end end break;end if (((2 -1)==v218) or ((2923 -665)<=(101 + 83))) then local v373=1478 -(1461 + 17) ;local v374;while true do if ((v373==0) or ((452 + 2852)<=2730)) then v374=0;while true do if (((6859 -4568)>=(1943 -(202 + 695))) and (v374==(0 -0))) then local v439=(0 -0) + 0 ;while true do if (((1128 -(721 + (1491 -(805 + 587))))<=(13384 -9702)) and (((0 -0) -0)==v439)) then v94=(v221 + v219) -1 ;v222=(0 + 0) -(310 -(13 + 297)) ;v439=1;end if ((v439==1) or (4615==(1233 -750))) then v374=1 + 0 ;break;end end end if ((v374==(928 -(547 + 380))) or ((1347 + 231)>=1672)) then v218=1 + 1 ;break;end end break;end end end end break;end if (((271 + 1973)>(480 -(235 + 67))) and (v217==((2034 -(269 + 746)) -(324 + 694)))) then local v322=0;while true do if (((3700 -(1198 + 192))==2310) and (v322==(0 -0))) then v220=nil;v221=nil;v322=1 -0 ;end if (((689 + 320)==(981 + (79 -51))) and (v322==((1474 -(841 + 629)) -3))) then v217=3 -1 ;break;end end end if (((2279 + 1120)<=(1597 + 3174)) and (v217==(0 -0))) then v218=1577 -((1553 -(95 + 869)) + 988) ;v219=nil;v217=1 -0 ;end end break;end if (((1602 -(129 + 161 + 1213))<(3537 -(664 + 164))) and (v216==(97 -(15 + 81)))) then v219=nil;v220=nil;v216=2;end end else local v223=0 + (0 -0) ;local v224;local v225;local v226;local v227;while true do if ((v223==(0 -0)) or ((9241 -7245)>(3867 -(261 + (1411 -(109 + 881)))))) then local v291=0;while true do if (((0 -0)==v291) or (897>(1330 + 1597))) then v224=443 -(251 + 192) ;v225=nil;v291=1 + 0 ;end if ((127<((6468 -(823 + 738)) -(24 + 16))) and (v291==(2 -1))) then v223=1 + (0 -0) ;break;end end end if (((830 + 3581)==(5311 -(540 + 360))) and (v223==((1482 -(1314 + 167)) + 1))) then while true do if ((4845>(8991 -4672)) and (v224==(1 + 0))) then v227=v112[v225 + 1 + 1 ];if ((v227>(1577 -(1193 + 384))) or (3053>=4857)) then if ((v226>v112[v225 + 1 + 0 ]) or ((10861 -(7938 -(1081 + 275)))<=(2796 -2016))) then v93=v114[8 -5 ];else v112[v225 + 3 ]=v226;end elseif (((6921 -3030)>=518) and (v226<v112[v225 + 1 ])) then v93=v114[3];else v112[v225 + (12 -9) ]=v226;end break;end if ((v224==0) or ((4814 -2841)>(379 + 1679))) then local v324=0 + 0 ;local v325;while true do if ((v324==(0 + 0)) or ((1854 + 2313)<=(224 + 684))) then v325=0 + 0 ;while true do if ((0==v325) or (3123<=(847 + 924))) then v225=v114[7 -5 ];v226=v112[v225];v325=1 + 0 ;end if ((v325==(1 + 0)) or ((2005 -(8 + 10))>=(14021 -9734))) then v224=1;break;end end break;end end end end break;end if (((11369 -7865)<(461 + 3887)) and (v223==1)) then v226=nil;v227=nil;v223=(925 -(484 + 34)) -(45 + 360) ;end end end elseif ((((1670 -(57 + 911)) + 1659)>=1280) and (v115<=28)) then v112[v114[931 -(5 + 507 + 196 + 221) ]]=v46[v114[12 -9 ]];elseif (((5871 -(591 + 716))>(10199 -7432)) and (v115>(9 + 20))) then v112[v114[1649 -(152 + 1495) ]][v114[8 -5 ]]=v114[4 + 0 ];else v112[v114[2 + 0 + 0 ]]= #v112[v114[4 -1 ]];end elseif ((v115<=(60 -27)) or ((9052 -(5928 -(483 + 139)))>4570)) then if (((3508 -(903 + 153))==(4606 -2154)) and (v115<=(9 + 22))) then if ( not v112[v114[1 + 1 ]] or ((6058 -4472)<=((2385 + 4255) -5221))) then v93=v93 + (2 -1) ;else v93=v114[8 -5 ];end elseif ((v115>(56 -(92 -68))) or (((4781 -1449) -(541 + 491))>=(8478 -4181))) then v112[v114[1711 -(534 + 1175) ]]=v112[v114[1 + (5 -3) ]] + v114[4 + 0 ] ;else v112[v114[8 -6 ]]=v114[3] + v112[v114[1121 -(535 + 582) ]] ;end elseif (((1853 -1193)<720) and (v115<=(93 -(232 -174)))) then if (((3555 -((425 -180) + 233))>=(2612 -928)) and (v115>((524 + 425) -(844 + 71)))) then v112[v114[2 + 0 ]]=v112[v114[1 + 2 ]] -v114[3 + 1 ] ;else local v235=0 -0 ;local v236;local v237;local v238;local v239;while true do if (((2809 -(1590 + 67))==(2156 -(527 + 20 + 457))) and (v235==(2 -1))) then v238=nil;v239=nil;v235=7 -5 ;end if ((v235==(1603 -(595 + 1006))) or ((2439 + 1260)>=(12188 -7766))) then while true do if (((90 + 2418)>=(2399 -(389 + 108 + 437))) and (v236==(1 -0))) then v239=0 + 0 ;for v348=v237,v114[4 + 0 ] do local v349=0 + 0 ;while true do if ((3096<(5177 -(1249 + 520))) and (v349==0)) then v239=v239 + 1 + 0 ;v112[v348]=v238[v239];break;end end end break;end if ((v236==(0 + 0)) or ((4657 -3465)>(8495 -(748 + 3159)))) then local v326=0 + 0 ;while true do if ((2028==(1082 + 946)) and (v326==(410 -(58 + 351)))) then v236=1;break;end if (((4441 -(214 + (529 -194)))>(3 + 5)) and (v326==(817 -(480 + 337)))) then v237=v114[764 -(472 + 290) ];v238={v112[v237](v14(v112,v237 + 1 ,v94))};v326=993 -((1314 -(706 + 400)) + 784) ;end end end end break;end if ((v235==(0 + 0)) or ((147 + 62)>(416 -(42 + 58)))) then v236=0;v237=nil;v235=(165 + 56) -(6 + 214) ;end end end elseif (((7150 -4506)<=(3233 + 86)) and (v115>36)) then local v240=0 -0 ;local v241;local v242;local v243;local v244;local v245;while true do if ((v240==(1 + 1)) or ((2364 -(55 + 27))==(19613 -15690))) then v245=nil;while true do if (((2800 -(856 + 460))<(3040 + 854)) and (v241==(2 + 0))) then for v350=v242,v94 do local v351=0 + 0 ;local v352;while true do if (((1504 + 19)<=((1792 + 2137) -2087)) and (v351==(0 + (1680 -(764 + 916))))) then v352=0;while true do if (((2382 -(901 + 928))<=(3552 -((811 -(577 + 226)) + 30))) and (v352==(1687 -(1211 + 260 + 216)))) then v245=v245 + 1 + 0 ;v112[v350]=v243[v245];break;end end break;end end end break;end if ((((7338 -(772 + 510)) -((2206 -(328 + 823)) + 768))==(1948 + 2285)) and (v241==(847 -(424 + 422)))) then local v327=1222 -(890 + 332) ;while true do if (((86 + 10)<1759) and (v327==(1438 -(842 + 596)))) then v94=(v244 + v242) -(1 + 0) ;v245=0 -0 ;v327=1;end if (((3409 -(430 + 1036))<(9679 -6217)) and (v327==1)) then v241=3 -1 ;break;end end end if ((v241==(0 + 0)) or ((4880 -(288 + 297))<=(1932 -670))) then local v328=0;while true do if ((v328==(1 + 0)) or ((1856 + 1597)==(486 + 3205))) then v241=2 -1 ;break;end if ((2652==(1354 + 1298)) and ((0 -0)==v328)) then v242=v114[2];v243,v244=v109(v112[v242]());v328=3 -(2 -0) ;end end end end break;end if ((v240==(1 -0)) or ((1416 -1131)>1089)) then v243=nil;v244=nil;v240=2;end if ((0==v240) or ((9417 -5085)<=(4166 -(371 + 397)))) then v241=0 -0 ;v242=nil;v240=1 -0 ;end end else v112[v114[2]]=v45[v114[5 -2 ]];end elseif ((v115<=(278 -(132 + 103))) or ((3429 -1991)>=(10213 -5558))) then if ((v115<=(93 -53)) or ((3555 -(120 + 939))<(19 + 275))) then if ((v115<=(569 -(428 + 103))) or ((165 -66)>=917)) then v112[v114[1196 -(48 + 1146) ]]=v112[v114[812 -(735 + 74) ]][v112[v114[610 -(346 + 260) ]]];elseif ((v115>(1729 -(835 + 855))) or (1157<(1569 -747))) then v112[v114[1396 -(1314 + 80) ]]=v112[v114[1773 -((1795 -596) + 571) ]]%v114[6 -2 ] ;else local v249=0;local v250;local v251;while true do if ((v249==(344 -(162 + 181))) or ((3159 -1358)==4483)) then while true do if ((v250==(0 + 0 + 0)) or ((9269 -4723)<=(361 + 1142))) then v251=v114[927 -((1828 -(837 + 569)) + 503) ];v112[v251](v14(v112,v251 + 1 ,v94));break;end end break;end if ((v249==(0 + 0)) or ((76 + 1429)<=(197 -(64 + 10 + 10)))) then v250=0 -0 ;v251=nil;v249=1 -0 ;end end end elseif ((((17538 -13233) -(444 + 148))<=(8778 -3965)) and (v115<=((68 + 147) -(130 + 44)))) then local v171=0 -0 ;local v172;local v173;local v174;local v175;local v176;local v177;local v178;while true do if ((2049>=(3776 -(334 + 1518))) and (v171==(1 + 0))) then v174=nil;v175=nil;v171=1581 -(1152 + 427) ;end if (((2763 -(204 + (1701 -(448 + 720))))>(1342 -(60 + 403 + 485))) and (v171==(0 + 0))) then v172=0 -0 ;v173=nil;v171=1 -0 ;end if ((v171==(5 -2)) or (1855>=(8448 -4913))) then v178=nil;while true do if (((1107 -(990 + 115))==v172) or ((11685 -6869)<(2751 -463))) then local v302=310 -(302 + 8) ;while true do if ((((15878 -7120) -6998)>(2098 -(738 + 828))) and ((1874 -(33 + 1841))==v302)) then v177=nil;v178=nil;v302=1 + 0 + 0 ;end if (((4732 -(86 + 2))==(5668 -(458 + 566))) and ((1 + 0)==v302)) then v172=1540 -((2808 -1626) + 355) ;break;end end end if ((v172==(0 + 0)) or (2673<=1676)) then v173=1902 -(1314 + 588) ;v174=nil;v172=1;end if (((5703 -(528 + 756))==(3959 + 460)) and (v172==(395 -(386 + 8)))) then local v303=1256 -(1089 + 167) ;while true do if ((v303==(3 -2)) or ((566 + 131)>=(5097 -(981 + (398 -298))))) then v172=968 -(231 + 735) ;break;end if (((9305 -7093)<(15294 -(11600 -(612 + 579)))) and (v303==(0 + 0))) then v175=nil;v176=nil;v303=1 + 0 ;end end end if ((v172==(1611 -(490 + 1118))) or ((4476 -(237 + 676))>(6611 -(511 + 1160)))) then while true do if ((v173==(2 -1)) or ((2636 + 1046)>(366 + 3504))) then local v353=0;while true do if ((0==v353) or (880==(4542 + 329))) then v176=v174 + 2 ;v177={v112[v174](v112[v174 + (2 -1) ],v112[v176])};v353=3 -2 ;end if (((6619 -2222)<(934 + 3516)) and (v353==1)) then v173=2 -0 ;break;end end end if ((v173==((378 -(81 + 296)) + 1)) or ((2638 -1766)==(3821 -(1140 + 680)))) then local v354=1979 -(1468 + 511) ;while true do if (((3255 -((1277 -(74 + 424)) + 91))<=(4160 -(15 + 23 + 29))) and ((1 + 0)==v354)) then v173=5 -2 ;break;end if (((3408 -(1752 -(50 + 359)))>1520) and (v354==(652 -((770 -414) + 296)))) then local v401=0 -0 ;while true do if (((1246 + 245)<=(3316 + 53)) and (v401==(1 + 0))) then v354=(1 + 2) -2 ;break;end if (((7013 -4401)<(4410 -(910 + 634))) and (v401==((1739 -(960 + 779)) -(0 -0)))) then for v435=1 + 0 ,v175 do v112[v176 + v435 ]=v177[v435];end v178=v177[934 -(257 + 676) ];v401=1104 -(850 + 253) ;end end end end end if (((1789 + 519)==(4394 -2086)) and (v173==0)) then local v355=272 -(232 + 40) ;local v356;while true do if (((1411 + 715)>1855) and (v355==(0 + 0))) then v356=0 + 0 ;while true do if ((3658>(869 + 862)) and (((3 -2) + 0)==v356)) then v173=1;break;end if (((217 + 416)==(1251 -(90 + 129 + 399))) and (v356==(0 -0))) then local v426=(0 -0) + (273 -(43 + 230)) ;while true do if (((2454 -(527 + 1280))>=170) and (v426==(749 -((1426 -(498 + 837)) + 658)))) then v174=v114[2];v175=v114[4];v426=1 -0 ;end if ((v426==(3 -2)) or (4890<(1608 + 943))) then v356=1870 -(1339 + 530) ;break;end end end end break;end end end if ((((1361 -(202 + 1116)) + 369)==(1286 -874)) and (v173==(3 + 0))) then if (((4856 -(297 + 172))>(568 + 95)) and v178) then local v377=0 + 0 ;local v378;local v379;while true do if ((227<=(4854 -(290 + 1118))) and (v377==(1 + 0))) then while true do if (((979 -476)<=3911) and (v378==0)) then v379=0 -0 ;while true do if ((((1605 -(77 + 1528)) -0)==v379) or ((5678 -1633)==(14852 -10436))) then v112[v176]=v178;v93=v114[(1922 -(738 + 398)) -(319 + 464) ];break;end end break;end end break;end if ((1112>=1008) and ((0 + 0)==v377)) then v378=0 -0 ;v379=nil;v377=(3360 -(780 + 752)) -(371 + 1456) ;end end else v93=v93 + 1 + 0 ;end break;end end break;end end break;end if (((1 + 1)==v171) or ((5942 -(260 + 750))<=(9622 -6192))) then v176=nil;v177=nil;v171=5 -2 ;end end elseif ((3062<=(3224 -(33 + 19))) and (v115==(866 -(652 + 172)))) then local v252=0;local v253;local v254;local v255;local v256;local v257;local v258;while true do if ((((2500 -(705 + 211)) -((1819 -1255) + 822))==(307 -109)) and (v252==(0 -(0 -0)))) then v253=0;v254=nil;v252=1 + 0 ;end if (((564 + 673)>=(1681 -(790 + 195))) and (v252==(7 -5))) then v257=nil;v258=nil;v252=3;end if ((3157>(324 + 106)) and (v252==(2 + 1))) then while true do if ((382<(9511 -4992)) and (v253==(2 -0))) then v258=nil;while true do if (((3411 -(287 + 467))<=4092) and ((999 -(251 + 748))==v254)) then local v380=1282 -(1182 + 100) ;while true do if (((95 -((892 -(269 + 605)) + 77))==v380) or ((1988 -(1420 + 391))>=598)) then v255=v114[6 -4 ];v256,v257=v109(v112[v255](v14(v112,v255 + 1 ,v114[1 + (5 -3) ])));v380=3 -2 ;end if (((4633 -((213 -(154 + 39)) + 10))>1063) and (v380==(1 + 0))) then v254=3 -2 ;break;end end end if (((4012 -(12 + 54))>(2846 -1998)) and (v254==((18 -12) -4))) then for v402=v255,v94 do local v403=0;local v404;while true do if ((v403==(1400 -(921 + 479))) or ((4352 -2384)==(3672 + 626))) then v404=(0 + 0) -0 ;while true do if ((v404==0) or ((1304 + 1904)<(9046 -6738))) then v258=v258 + (2 -(2 -1)) ;v112[v402]=v256[v258];break;end end break;end end end break;end if (((3435 + 124)>(236 + 117)) and ((1 + 0)==v254)) then local v381=0;local v382;while true do if ((v381==0) or ((16 + 3492)<=((641 -(78 + 152)) -272))) then v382=(0 + 0) -0 ;while true do if (((4563 -(298 + 624))==3641) and (v382==(1434 -(1020 + (697 -283))))) then local v440=0;while true do if ((v440==(0 + 0)) or ((5582 -2934)>(3161 + 848))) then v94=(v257 + v255) -(1 + 0) ;v258=0 + 0 ;v440=(3806 -2520) -(302 + 983) ;end if (((5540 -(150 + 661))>=(1665 + 198)) and (v440==(2 -1))) then v382=1 + 0 ;break;end end end if (((3295 -(897 + 387))==(158 + 1853)) and (v382==(959 -(67 + 891)))) then v254=1695 -((994 -(104 + 505)) + 1308) ;break;end end break;end end end end break;end if ((620==(2201 -1581)) and ((0 -0)==v253)) then local v330=0 + (0 -0) ;while true do if (((4458 -(58 + 1220))<=(969 + 3454)) and (v330==(1748 -(591 + 1156)))) then v253=1 + 0 ;break;end if (((892 -395)<=3450) and ((0 -0)==v330)) then v254=0;v255=nil;v330=1 -(1555 -(1443 + 112)) ;end end end if ((4656>(2225 -(1063 + 25))) and ((1 -0)==v253)) then local v331=1472 -(1294 + 178) ;while true do if ((v331==(0 + 0)) or ((773 -(57 + 149))<=((1187 -666) -((240 -108) + 272)))) then v256=nil;v257=nil;v331=1 + 0 ;end if (((1 -0)==v331) or (548==(1036 + 2650))) then v253=1 + 1 ;break;end end end end break;end if (((1765 + 2755)>(2325 -1244)) and (v252==(3 -(5 -3)))) then v255=nil;v256=nil;v252=2 + 0 ;end end else local v259=(1453 -698) -(284 + 471) ;local v260;local v261;local v262;while true do if ((v259==(0 + (1844 -(565 + 1279)))) or (1426>=((3093 + 2456) -(1345 + (852 -456))))) then v260=0;v261=nil;v259=21 -(17 + 3) ;end if ((2391>((2714 -(1747 + 75)) -(29 + 1))) and ((1 -0)==v259)) then v262=nil;while true do if (((2088 + 522)>(397 + (1740 -(87 + 1034)))) and ((1 + 0)==v260)) then while true do if ((v261==(0 -0)) or ((765 + 1070)==(3004 + 311))) then v262=v114[2 + 0 ];v112[v262]=v112[v262]();break;end end break;end if ((v260==(1879 -(729 + 1150))) or ((1546 + 892)>=4215)) then local v332=119 -(21 + 98) ;while true do if ((0==v332) or ((186 + 1284)>=(1803 + 517))) then v261=0 + 0 ;v262=nil;v332=1;end if (((1324 + (491 -383))<(3578 + 394)) and (v332==(1 + 0 + 0))) then v260=1 -0 ;break;end end end end break;end end end elseif (((440 + 3825)>=(7105 -3876)) and (v115<=(1256 -(997 + 213)))) then if ((v115<=(4 + 40)) or (((3802 -(636 + 129)) -(140 + 536))>=(3526 -(763 + 400)))) then local v179=(88 -(57 + 31)) -0 ;local v180;local v181;local v182;while true do if ((v179==(0 -0)) or (3802<=1079)) then v180=0;v181=nil;v179=1 -0 ;end if ((v179==(2 -1)) or ((2518 -(2383 -1181))==2977)) then v182=nil;while true do if ((v180==0) or ((2206 + 2327)<2107)) then local v304=0 + 0 ;while true do if (((1105 + 279)<=(2619 + 245)) and (v304==(4 -3))) then v180=1953 -(261 + 1691) ;break;end if (((3821 -1899)==1922) and (v304==(0 + 0))) then v181=1140 -((1404 -(436 + 370)) + 542) ;v182=nil;v304=1737 -(1130 + 606) ;end end end if (((5926 -(784 + 834))>=(9097 -5786)) and (v180==1)) then while true do if (((719 -435)<=(2170 + 2460)) and (v181==(0 -0))) then v182=v114[2 -0 ];do return v112[v182](v14(v112,v182 + (1 -0) ,v114[2 + 1 ]));end break;end end break;end end break;end end elseif ((512<=(8856 -4416)) and (v115==(279 -(215 + 19)))) then local v263=898 -(863 + 35) ;local v264;local v265;while true do if (((1176 + 3511)<=((2056 + 9232) -6601)) and (v263==(1 + 0))) then v112[v264 + (2 -1) ]=v265;v112[v264]=v265[v114[232 -(39 + (332 -143)) ]];break;end if (((5397 -4112)<=(5797 -(849 + (3319 -2266)))) and (v263==(0 -0))) then v264=v114[1 + 1 ];v265=v112[v114[(12 -5) -4 ]];v263=2 -(77 -(50 + 26)) ;end end else local v266=1965 -(1413 + 552) ;local v267;local v268;local v269;while true do if (((995 + 2549)>=2172) and (v266==(0 + 0))) then v267=(516 + 348) -(684 + 180) ;v268=nil;v266=1 -0 ;end if ((v266==1) or ((6 + 116)>924)) then v269=nil;while true do if ((v267==(1 + 0)) or ((16521 -12434)<1678)) then while true do if ((4618==(15737 -11119)) and (v268==(0 + 0))) then v269=v114[1 + 1 ];do return v14(v112,v269,v269 + v114[1482 -(26 + 1453) ] );end break;end end break;end if (((765 -(89 + 214))<(1226 + 2569)) and (v267==(0 -0))) then local v333=0 -0 ;while true do if ((1205<(3678 -(130 + (2566 -(390 + 359))))) and (v333==1)) then v267=1 + 0 ;break;end if ((v333==(0 -0)) or (961>(1001 + (6773 -5126)))) then v268=0;v269=nil;v333=1;end end end end break;end end end elseif ((v115<=(131 -(248 -165))) or ((6825 -4698)<(1220 + 335))) then if ((1929<=(3546 + 584)) and (v115>(33 + 14))) then local v270=0 -0 ;local v271;local v272;local v273;local v274;while true do if ((v270==1) or (((17423 -10606) -4211)<(4823 -3145))) then v273=nil;v274=nil;v270=2 -0 ;end if ((v270==2) or (3131<(1398 + 1148))) then while true do if (((3 -2)==v271) or ((6673 -1977)<=1739)) then local v334=1047 -(1011 + 36) ;while true do if (((2217 -(943 + 170))<4097) and (v334==(1604 -(1333 + 271)))) then v274=v112[v272] + v273 ;v112[v272]=v274;v334=1913 -(1013 + 899) ;end if ((4003>=2155) and (v334==(1 + 0))) then v271=628 -(378 + 248) ;break;end end end if ((v271==(1526 -(227 + (3197 -(692 + 1208))))) or ((609 + 1821)<(5455 -4274))) then if ((v273>(0 + 0)) or (((14161 -10439) -(50 + 75))<(1119 -717))) then if ((v274<=v112[v272 + (1670 -(886 + 783)) ]) or ((6173 -4869)>=((1297 -(1050 + 4)) + 1798))) then local v405=0;local v406;local v407;while true do if (((6833 -5397)==1436) and (v405==(642 -((1135 -564) + 70)))) then while true do if ((v406==(1792 -((2473 -(888 + 26)) + (459 -(155 + 71))))) or ((1562 -(641 + 814))>(110 + 601))) then v407=0 -0 ;while true do if (((250 + 94)<(1650 + 69)) and (((8 + 66) -((94 -57) + 37))==v407)) then v93=v114[879 -(169 + 707) ];v112[v272 + (386 -(5 + 378)) ]=v274;break;end end break;end end break;end if ((v405==0) or ((1335 -313)==(1829 -1390))) then v406=0;v407=nil;v405=1;end end end elseif ((v274>=v112[v272 + 1 + 0 ]) or ((3098 -((31 -17) + 5))==(49 + 4690))) then local v408=0;local v409;while true do if (((4832 -2688)<(4021 -(371 + 127))) and (v408==(631 -(143 + 37 + 451)))) then v409=0 + 0 ;while true do if (((2060 -(147 + 196))<(7045 -3811)) and (v409==0)) then v93=v114[9 -6 ];v112[v272 + (778 -(749 + 18 + 8)) ]=v274;break;end end break;end end end break;end if ((v271==(1558 -(1333 + 225))) or ((464 -180)>(1583 + 80))) then local v335=(0 -0) -0 ;while true do if (((4219 + 486)>=(668 -334)) and (v335==(0 -(0 -0)))) then v272=v114[76 -(20 + 54) ];v273=v112[v272 + 2 ];v335=446 -(77 + 368) ;end if (((4632 -(456 + 1295))<2935) and (v335==1)) then v271=1;break;end end end end break;end if (((0 + 0)==v270) or ((729 + 647)==(112 + 1204))) then v271=0 + 0 ;v272=nil;v270=3 -(91 -(4 + 85)) ;end end else do return;end end elseif ((v115==(148 -99)) or ((6023 -2565)==2881)) then if (((434 + 162)>(72 + (1033 -(709 + 46)))) and (v112[v114[1 + 1 ]]~=v112[v114[8 -4 ]])) then v93=v93 + (1 -0) ;else v93=v114[10 -(3 + 4) ];end elseif (((5617 -(402 + 286))>715) and (v114[1 + 1 ]==v112[v114[11 -7 ]])) then v93=v93 + (1077 -(846 + 230)) ;else v93=v114[4 -1 ];end v93=v93 + (4 -3) ;break;end if ((v118==0) or ((7346 -2779)<=(4259 -(1042 + 572)))) then local v129=232 -(205 + 27) ;local v130;while true do if (((70 + 4291)>=(1166 + 446)) and (v129==(800 -((1558 -1140) + 382)))) then v130=0 -0 ;while true do if ((2618==(2027 + 591)) and (v130==(0 + 0))) then local v137=0;while true do if ((2358>=(1111 -406)) and (v137==1)) then v130=1 -0 ;break;end if (((2386 -(352 + 1294))<=(245 + 1075)) and (v137==(0 -(0 -0)))) then v114=v106[v93];v115=v114[1 -0 ];v137=1;end end end if ((v130==1) or ((5847 -(1067 + 232))<(3566 -(371 + 183)))) then v118=1 + 0 ;break;end end break;end end end end break;end end end end;v92=3;end if (v92==3) then A,B=v41(v12(v97));if  not A[1] then local v119=v44[4][v93] or "?" ;error("Script error at ["   .. v119   .. "]:"   .. A[2] );else return v14(A,2,B);end break;end end end;end if (v74==0) then v75=v44[1];v76=v44[2];v74=1;end end end return v43(v42(),{},v21)(...);end;vv10(),...);break;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==2) then v7=table.concat;v8=table.insert;v9=math.ldexp;v0=3;end end end
