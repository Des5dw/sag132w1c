--[[
 __________   __    __   __    __    __      __    __      __    _________    _            _    __________
/        //  /  /  /  / /  /  /  /  /  /    /  /  /  /    /  /  /   ____  /  \ \          / /  /        //
/  ______//  /  / /  /  /  / /  /   /  /____/  /  /  /    /  /  /  /____/ /   \ \        / /   /______  //
/        //  /  //  /   /  //  /    /   ____   /  /  /    /  /  /_________/    \ \      / /    /        //
/_____   //  /  /\  \   /  /\  \    /  /    /  /  /  /    /  /  /   ____  \     \ \    / /     /   _____//
/        //  /  / \  \  /  / \  \   /  /    /  /  /  /____/  /  /  /____/ /      \ \  / /      /        //
/________//  /__/  \__\ /__/  \__\  /__/    /__/  /__________/  /_________/       \_\/_/       /________//
]]--
do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==4) then v28=nil;v28=function(...)return {...},v12("#",...);end;v29=nil;v29=function()local v39=0 -0 ;local v40;local v41;local v42;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v39~=(2 + 2)) then else v48=nil;while true do if (v40==1) then local v98=0;while true do if (v98==1) then v40=2;break;end if (v98==0) then v43=nil;v44=nil;v98=34 -(21 + 12) ;end end end if (v40==(5 -3)) then local v99=0;while true do if (v99~=1) then else v40=3;break;end if (0~=v99) then else v45=nil;v46=nil;v99=1 + 0 ;end end end if ((13 -10)~=v40) then else local v100=0;while true do if (v100==(1 + 0)) then v40=4;break;end if (v100==(0 + 0)) then v47=nil;v48=nil;v100=169 -(164 + 4) ;end end end if (v40==4) then while true do if (v41~=1) then else v44=nil;v45=nil;v41=2 + 0 ;end if (v41~=2) then else local v113=0;while true do if (v113==(1 + 0)) then v41=3 + 0 ;break;end if (v113==(0 + 0)) then local v117=0 -0 ;while true do if (0~=v117) then else v46=nil;v47=nil;v117=1;end if (v117~=(2 -1)) then else v113=1 + 0 ;break;end end end end end if (v41==(3 + 0)) then v48=nil;while true do local v115=0;local v116;while true do if (v115~=0) then else v116=0 + 0 ;while true do if (v116==0) then local v120=1877 -(1143 + 734) ;local v121;while true do if (v120==0) then v121=0 + 0 ;while true do if (v121==(1 + 0)) then v116=3 -2 ;break;end if (v121==0) then local v126=0 + 0 ;while true do if (v126==0) then if (0==v42) then local v153=0;local v154;local v155;while true do if (v153~=1) then else while true do if (v154==0) then v155=0;while true do if (v155==(1 + 0)) then local v337=0 + 0 ;while true do if (v337==1) then v155=2;break;end if (v337~=(0 + 0)) then else v45={};v46={v43,v44,nil,v45};v337=1;end end end if (2==v155) then v42=2 -1 ;break;end if (v155==(0 -0)) then local v338=0 + 0 ;local v339;while true do if (v338~=0) then else v339=0 + 0 ;while true do if (v339~=0) then else local v410=0 + 0 ;while true do if (0==v410) then v43={};v44={};v410=1;end if (v410~=1) then else v339=1;break;end end end if (v339==(223 -(204 + 18))) then v155=1 + 0 ;break;end end break;end end end end break;end end break;end if (v153==(1919 -(476 + 1443))) then v154=0 + 0 ;v155=nil;v153=1;end end end if (v42~=1) then else local v156=0;local v157;local v158;while true do if (v156==0) then v157=0;v158=nil;v156=1;end if (v156==1) then while true do if (v157==(0 + 0)) then v158=0 -0 ;while true do if (v158==(939 -(690 + 248))) then local v340=0;while true do if (v340==(0 -0)) then for v398=1 + 0 ,v47 do local v399=0;local v400;local v401;local v402;while true do if (v399==(0 + 0)) then local v421=0 -0 ;while true do if (v421==1) then v399=1;break;end if (v421==0) then v400=0;v401=nil;v421=1;end end end if (v399==(575 -(275 + 299))) then v402=nil;while true do if (v400==(429 -(286 + 142))) then if (v401==(1 -0)) then v402=v22()~=0 ;elseif (v401==2) then v402=v25();elseif (v401==(4 -1)) then v402=v26();end v48[v398]=v402;break;end if (v400==0) then local v450=0 -0 ;while true do if (0==v450) then local v454=0;local v455;while true do if (v454==(1778 -(537 + 1241))) then v455=914 -(350 + 564) ;while true do if (v455==(0 -0)) then local v474=165 -(103 + 62) ;while true do if (v474==(500 -(173 + 327))) then v401=v22();v402=nil;v474=4 -3 ;end if (v474==1) then v455=1 -0 ;break;end end end if (v455==1) then v450=1;break;end end break;end end end if (v450~=1) then else v400=1;break;end end end end break;end end end v46[11 -8 ]=v22();v340=1 + 0 ;end if (v340==1) then v158=6 -4 ;break;end end end if (v158==2) then v42=159 -(61 + 96) ;break;end if (v158==0) then local v341=0;while true do if (v341==(0 -0)) then v47=v24();v48={};v341=1286 -(647 + 638) ;end if (1~=v341) then else v158=1;break;end end end end break;end end break;end end end v126=1;end if (v126==1) then v121=1;break;end end end end break;end end end if (v116~=(4 -3)) then else if (v42~=2) then else local v122=0 + 0 ;local v123;local v124;while true do if (v122~=(0 -0)) then else v123=330 -(134 + 196) ;v124=nil;v122=1 -0 ;end if (v122~=1) then else while true do if (v123==(1644 -(1538 + 106))) then v124=0;while true do local v129=0 + 0 ;while true do if (v129==0) then if (v124~=(1788 -(1752 + 36))) then else local v269=765 -(358 + 407) ;local v270;while true do if ((469 -(238 + 231))==v269) then v270=0;while true do if ((1931 -(607 + 1324))~=v270) then else local v342=0 -0 ;while true do if (v342==(1517 -(1372 + 145))) then for v403=1,v24() do local v404=0;local v405;while true do if (v404==(0 -0)) then v405=v22();if (v21(v405,1113 -(1091 + 21) ,1)~=(0 -0)) then else local v442=0;local v443;local v444;local v445;local v446;while true do if (v442==1) then v445=nil;v446=nil;v442=2 -0 ;end if (v442~=(0 -0)) then else v443=0;v444=nil;v442=1;end if (2~=v442) then else while true do if (v443~=(1 + 0)) then else local v458=0;local v459;while true do if (v458==0) then v459=0 + 0 ;while true do if (v459==1) then v443=2;break;end if (v459==0) then v446={v23(),v23(),nil,nil};if (v444==0) then local v476=0;local v477;while true do if (v476==0) then v477=296 -(244 + 52) ;while true do if (0~=v477) then else v446[3 + 0 ]=v23();v446[7 -3 ]=v23();break;end end break;end end elseif (v444==(2 -1)) then v446[1 + 2 ]=v24();elseif (v444==(2 -0)) then v446[1 + 2 ]=v24() -(2^(941 -(593 + 332))) ;elseif (v444~=(8 -5)) then else local v485=0;local v486;while true do if (v485==(0 + 0)) then v486=0 + 0 ;while true do if (v486==(0 -0)) then v446[1374 -(965 + 406) ]=v24() -(2^16) ;v446[11 -7 ]=v23();break;end end break;end end end v459=1 + 0 ;end end break;end end end if (v443==2) then if (v21(v445,1,1)~=1) then else v446[1029 -(163 + 864) ]=v48[v446[3 -1 ]];end if (v21(v445,1 + 1 ,2)~=1) then else v446[2 + 1 ]=v48[v446[1346 -(684 + 659) ]];end v443=676 -(525 + 148) ;end if (v443~=(4 -1)) then else if (v21(v445,3,3)==1) then v446[4]=v48[v446[14 -10 ]];end v43[v403]=v446;break;end if (v443==0) then local v461=0 -0 ;local v462;while true do if (v461==(0 -0)) then v462=0 + 0 ;while true do if (v462==(1 + 0)) then v443=2 -1 ;break;end if (v462~=(0 -0)) then else local v475=0;while true do if (v475~=1) then else v462=1;break;end if (v475==(0 + 0)) then v444=v21(v405,2,3);v445=v21(v405,4,6);v475=1;end end end end break;end end end end break;end end end break;end end end for v406=472 -(172 + 299) ,v24() do v44[v406-(3 -2) ]=v29();end v342=3 -2 ;end if ((1862 -(1768 + 93))==v342) then v270=1;break;end end end if (v270==(1854 -(245 + 1608))) then v124=3 -2 ;break;end end break;end end end if (v124==1) then local v271=0;while true do if (v271~=0) then else for v320=1,v24() do v45[v320]=v24();end return v46;end end end break;end end end break;end end break;end end end break;end end break;end end end break;end if (v41==(1602 -(639 + 963))) then local v114=0 -0 ;while true do if (1==v114) then v41=1;break;end if ((1035 -(826 + 209))==v114) then v42=0;v43=nil;v114=1;end end end end break;end if (v40==(1484 -(919 + 565))) then local v101=0 -0 ;while true do if (v101==0) then v41=0 -0 ;v42=nil;v101=1 -0 ;end if (v101==(352 -(258 + 93))) then v40=1;break;end end end end break;end if (v39~=(0 -0)) then else v40=0 + 0 ;v41=nil;v39=1;end if (v39==3) then v46=nil;v47=nil;v39=1464 -(1138 + 322) ;end if ((1 + 0)~=v39) then else v42=nil;v43=nil;v39=2;end if (v39==2) then v44=nil;v45=nil;v39=1545 -(1016 + 526) ;end end end;v18=5;end if (v18==3) then v25=function()local v49=v24();local v50=v24();local v51=1;local v52=(v21(v50,1842 -(837 + 1004) ,(530 -(57 + 464)) + 11 ) * ((3 -1)^(12 + 20))) + v49 ;local v53=v21(v50,21,1422 -(301 + 1090) );local v54=((v21(v50,525 -(37 + 456) )==(1 + 0)) and  -(716 -(165 + 550))) or (1 -0) ;if (v53==(0 + 0)) then if (v52==(0 + (72 -(32 + 40)))) then return v54 * (0 + 0) ;else local v79=0 + 0 ;while true do if ((0 -0)==v79) then v53=2 -1 ;v51=0;break;end end end elseif (v53==((4043 + 5282) -7278)) then return ((v52==(0 -0)) and (v54 * (1/(1727 -(353 + 1374))))) or (v54 * NaN) ;end return v8(v54,v53-(958 + 65) ) * (v51 + (v52/(2^(3 + 29 + 20)))) ;end;v26=nil;v26=function(v31)local v55=24 -(12 + 12) ;local v56;local v57;while true do if ((1 -0)==v55) then v56=v3(v16,v19,(v19 + v31) -(1 + 0) );v19=v19 + v31 ;v55=310 -(258 + 50) ;end if ((1 + 2)==v55) then return v6(v57);end if (((374 + 1011) -(1175 + 208))==v55) then v57={};for v80=1733 -(1128 + 604) , #v56 do v57[v80]=v2(v1(v3(v56,v80,v80)));end v55=3;end if (v55==0) then v56=nil;if  not v31 then local v87=0 -0 ;while true do if (v87==(0 -0)) then v31=v24();if (v31==(0 + 0)) then return "";end break;end end end v55=1 + 0 ;end end end;v27=v24;v18=4;end if (v18==2) then v23=function()local v58,v59=v1(v16,v19,v19 + (6 -4) );v19=v19 + 2 + 0 ;return (v59 * (201 + 55)) + v58 ;end;v24=nil;v24=function()local v60,v61,v62,v63=v1(v16,v19,v19 + (9 -6) );v19=v19 + 3 + 1 ;return (v63 * 16777216) + (v62 * 65536) + (v61 * (560 -304)) + v60 ;end;v25=nil;v18=3;end if (v18==5) then v30=nil;v30=function(v32,v33,v34)local v64=0;local v65;local v66;local v67;while true do if (0==v64) then v65=v32[1];v66=v32[2];v64=1;end if (v64==1) then v67=v32[3];return function(...)local v82=1;local v83= -1;local v84={...};local v85=v12("#",...) -1 ;local function v86()local v88=v65;local v89=v66;local v90=v67;local v91=v28;local v92={};local v93={};local v94={};for v102=0,v85 do if (((1282 + 1610)<((1937 -(286 + 165)) + 1809)) and (v102>=v90)) then v92[v102-v90 ]=v84[v102 + 1 + (136 -(10 + 126)) ];else v94[v102]=v84[v102 + 1 ];end end local v95=(v85-v90) + (856 -(660 + 195)) ;local v96;local v97;while true do local v103=(814 -(23 + 56)) -(28 + 707) ;local v104;local v105;while true do if ((v103==(1427 -(222 + 1205))) or ((5896 -2391)<2179)) then v104=0 + 0 ;v105=nil;v103=375 -((733 -(410 + 168)) + 219) ;end if ((((491 -(259 + 231)) -0)==v103) or (1919>=(2099 + 226))) then while true do if (((9778 -6065)<=(7855 -3648)) and (v104==0)) then v105=1236 -(339 + 897) ;while true do if ((44<(15221 -11190)) and (v105==(0 -(1090 -(1014 + 76))))) then local v118=0;local v119;while true do if ((v118==(99 -(64 + 35))) or ((1708 -(23 + 6))>=(970 + 3053))) then v119=404 -(355 + 49) ;while true do if ((v119==(418 -(333 + 85))) or ((1643 + 614)==(3221 -(259 + 601)))) then local v125=0;while true do if ((227<=(3693 + 501)) and (v125==(1459 -(974 + 484)))) then v119=(1 -0) -0 ;break;end if ((v125==(0 -0)) or ((703 + 3425)<(991 + 856))) then v96=v88[v82];v97=v96[1 + 0 ];v125=4 -3 ;end end end if ((816==(939 -(23 + 100))) and (v119==(1 + 0))) then v105=1 -0 ;break;end end break;end end end if (((2692 -(144 + 215))>(1729 -(850 + 99))) and (v105==((2936 -1718) -(1171 + 46)))) then if (((2735 + 273)>=(5229 -2936)) and (v97<=24)) then if (((559 + 1862)==(2982 -(71 + 302 + 188))) and (v97<=(32 -21))) then if (((3050 + 863)>(3381 -(255 + 1097))) and (v97<=(11 -6))) then if ((v97<=(3 -1)) or ((213 + 536)>(2216 -(658 + 253)))) then if (((741 + 4190)>=(4619 -(4354 -(789 + 183)))) and (v97<=(653 -(285 + 368)))) then v94[v96[1731 -(1460 + 269) ]]=v96[3 + 0 ];elseif ((3250>=2584) and (v97==(3 -2))) then v94[v96[2 + 0 ]]();else local v159=(2346 -1752) -(315 + 279) ;local v160;local v161;local v162;while true do if ((v159==(1822 -(1712 + 110))) or ((772 + 1137)<=(1944 -(258 + 1396)))) then v160=0;v161=nil;v159=2 -(440 -(155 + 284)) ;end if ((v159==1) or (475==(797 -560))) then v162=nil;while true do if (((6324 -(1235 + 730))>(4933 -(1480 + 499))) and (v160==(0 + 0))) then local v289=(0 + 0) -0 ;while true do if ((760<=(8147 -5739)) and (v289==1)) then v160=1;break;end if (((2968 + 1104)>=(3035 -((134 -(44 + 60)) + 35))) and (v289==(503 -(302 + 201)))) then v161=950 -(290 + (1318 -658)) ;v162=nil;v289=753 -(371 + (1171 -(21 + 769))) ;end end end if ((2843==2843) and (v160==(4 -3))) then while true do if (((313 -87)<(17 + 1111)) and (v161==0)) then v162=v96[2];v94[v162]=v94[v162](v13(v94,v162 + ((1 + 2) -2) ,v83));break;end end break;end end break;end end end elseif (((384 + 2033)>(2614 -(293 + 526))) and (v97<=3)) then v94[v96[7 -5 ]]= #v94[v96[3 + (0 -0) ]];elseif ((v97==(1519 -(1275 + 240))) or ((1425 -(60 + 16))==2681)) then if (((11075 -8256)<=(1139 + 3663)) and v94[v96[1800 -(1417 + 381) ]]) then v82=v82 + 1 + 0 ;else v82=v96[3];end else do return v94[v96[2]];end end elseif (((6780 -2507)>=(5197 -(1350 + 260))) and (v97<=(960 -(131 + 821)))) then if ((((2738 -(279 + 48)) -(773 + 715))<=(2099 -667)) and (v97<=(5 + 1))) then v94[v96[(5 -3) -0 ]]=v94[v96[3 + 0 ]] -v96[(3042 -1420) -(1579 + 39) ] ;elseif ((v97>(16 -(1597 -(998 + 590)))) or (863>=(4219 + 292))) then local v163=0 -0 ;local v164;local v165;local v166;while true do if ((v163==(0 -0)) or ((6251 -(913 + 3157))<=(1940 -(1211 + 56)))) then v164=0 -0 ;v165=nil;v163=(1 + 0) -0 ;end if ((v163==(558 -(90 + 467))) or ((5319 -2780)<(1289 + (1024 -(635 + 63))))) then v166=nil;while true do if ((v164==1) or ((1408 + 2415)<=((10 -4) + 3702))) then while true do if ((v165==0) or ((1178 + 1234)<=(6329 -4752))) then v166=v96[2];v94[v166]=v94[v166]();break;end end break;end if (((3225 -2072)<=3395) and (v164==(0 + 0))) then local v290=0 -(0 -0) ;while true do if (((2713 -949)==(163 + 1601)) and ((1 + 0)==v290)) then v164=1;break;end if ((v290==(1836 -(1208 + 628))) or ((1171 -(6 + 6 + 14))==(2656 -(402 + 333)))) then v165=465 -(327 + 138) ;v166=nil;v290=2 -1 ;end end end end break;end end else local v167=1925 -(1645 + 280) ;local v168;local v169;local v170;while true do if (((0 + 0 + 0)==v167) or (2261>=4345)) then v168=62 -(29 + (479 -(64 + 382))) ;v169=nil;v167=2 -1 ;end if ((v167==1) or ((1220 + 753)>=(2682 + 719))) then v170=nil;while true do if (((2167 -(280 + 335))>=(2233 -(235 + 894))) and (1==v168)) then while true do if (((0 + 0)==v169) or ((10997 -8088)==(12353 -7723))) then v170=v96[1219 -(548 + 669) ];v94[v170](v94[v170 + (1 -0) ]);break;end end break;end if ((v168==(0 -0)) or ((162 + 4739)<=4153)) then local v291=(109 + 484) -(288 + 44 + 261) ;while true do if ((v291==(0 -0)) or (((48 + 2083) -(1921 -(1166 + 284)))>1764)) then v169=0 -0 ;v170=nil;v291=2 -1 ;end if (((5009 -(302 + 277 + 205))==(6204 -(1532 + 447))) and (v291==(1 -0))) then v168=1506 -(845 + 660) ;break;end end end end break;end end end elseif (((3707 + 1158)==(1618 + 3247)) and (v97<=(7 + 2))) then if (((2923 -(484 + (2559 -1509)))<=(7471 -4997)) and (v94[v96[4 -2 ]]==v96[1 + 3 ])) then v82=v82 + 1 + 0 ;else v82=v96[(8 -3) -2 ];end elseif (((876 -(1924 -(295 + 1210)))==(821 -(290 + 74))) and (v97>(15 -5))) then local v172=0 + (521 -(456 + 65)) ;local v173;local v174;local v175;while true do if (((9932 -5894)<=((5646 -(248 + 203)) -(678 + 280))) and (1==v172)) then v175=nil;while true do if ((v173==((3658 -2229) -(1031 + 398))) or ((12843 -(42427 -32834))<=(928 + 1491))) then local v292=166 -(31 + 135) ;while true do if ((((114 -36) -(20 + 57))==v292) or ((2428 -642)<(3227 -1529))) then v173=3 -2 ;break;end if ((v292==((0 -0) + 0)) or (4969<(4400 -(273 + 138)))) then v174=(196 -(14 + 182)) + 0 ;v175=nil;v292=2 -1 ;end end end if ((v173==(2 -(2 -1))) or (1322==(542 + 2852))) then while true do if ((v174==(0 -(379 -(88 + 291)))) or ((1143 + 1345)<=(2057 -699))) then v175=v96[2];do return v13(v94,v175,v175 + v96[3 + 0 ] );end break;end end break;end end break;end if ((v172==(0 + 0)) or ((795 -(75 + 146))>=(1628 -892))) then v173=0;v174=nil;v172=1 -0 ;end end else for v263=v96[(2570 -(238 + 832)) -(31 + 1467) ],v96[3] do v94[v263]=nil;end end elseif (((7431 -5504)<(2464 -(92 + 131))) and (v97<=(67 -(35 + 15)))) then if ((v97<=(34 -20)) or (1439>=(2462 -(15 + 16)))) then if ((v97<=(5 + 7)) or (((2662 -(1580 + 17)) + 8)>3825)) then v94[v96[623 -(342 + 279) ]]=v94[v96[3]][v94[v96[564 -((728 -369) + 201) ]]];elseif ((291<(3796 -(92 + 3 + 338))) and (v97==13)) then local v176=0 -0 ;local v177;local v178;local v179;while true do if (((1407 -(440 + 641))<=((3857 + 478) -2685)) and (v176==((0 + 0) -0))) then local v272=0 -0 ;while true do if (((0 + 0)==v272) or ((4086 + 520)<=(6028 -(5041 -(443 + 332))))) then v177=v96[6 -4 ];v178={v94[v177](v13(v94,v177 + (89 -(82 + 6)) ,v83))};v272=1 + 0 ;end if (((3200 -(1048 + 39))>=(2294 -(111 + 194))) and (v272==(216 -(206 + 9)))) then v176=1 + 0 ;break;end end end if (((1727 + 579)>1908) and (1==v176)) then v179=0 + 0 ;for v280=v177,v96[1389 -(444 + 941) ] do local v281=1405 -(851 + 554) ;local v282;while true do if (((7534 -4571)<=(4610 -(40 + 1343))) and (v281==0)) then v282=0 + 0 + 0 ;while true do if (((4186 -(1572 + 408))<(221 + 3521)) and (v282==((0 -0) -0))) then v179=v179 + (178 -(76 + 101)) ;v94[v280]=v178[v179];break;end end break;end end end break;end end else local v180=0;local v181;while true do if ((((6048 -4333) -(23 + 1082))<=(3413 -(92 + (183 -131)))) and (v180==(0 -0))) then v181=v96[2 + 0 ];v94[v181]=v94[v181](v94[v181 + (116 -(67 + 48)) ]);break;end end end elseif ((((64 + 89) -88)<(1284 + 2315)) and (v97<=(955 -((2067 -1236) + 109)))) then local v136=0 + 0 ;local v137;local v138;local v139;while true do if ((v136==0) or ((329 + 94)>(2682 + 2309))) then v137=289 -(17 + 13 + 259) ;v138=nil;v136=191 -((8 -2) + 184) ;end if ((663==663) and (v136==(1570 -(377 + 1192)))) then v139=nil;while true do if ((v137==(0 + 0)) or (3959>=(6381 -(1368 + 264)))) then local v283=0 -0 ;while true do if (((1277 -(275 + 1001))==v283) or (((1813 + 1537) -(20 + 84 + 81))>(4201 -(203 + 68)))) then v137=1368 -(453 + 914) ;break;end if ((v283==(0 + 0)) or ((9549 -7134)>4477)) then v138=0 + 0 ;v139=nil;v283=1 + 0 ;end end end if ((815<=(4557 + 365)) and (v137==1)) then while true do if ((2156>(3088 -1529)) and (0==v138)) then v139=v96[9 -7 ];do return v94[v139](v13(v94,v139 + 1 + 0 ,v96[3 + 0 ]));end break;end end break;end end break;end end elseif ((v97==(42 -26)) or ((143 + 0)>(2195 + (4089 -2084)))) then local v182=(2 + 99) -(95 + (15 -9)) ;local v183;local v184;while true do if (((1 -0)==v182) or (((816 -501) + 3357)==(356 + 1162))) then while true do if (((15501 -12369)==(10383 -7251)) and (v183==(0 -0))) then v184=v96[291 -(112 + 177) ];v94[v184]=v94[v184](v13(v94,v184 + (772 -(592 + 179)) ,v96[1745 -(1738 + 4) ]));break;end end break;end if (((10671 -7340)>(3872 -(839 + 406))) and (v182==(871 -(571 + 300)))) then v183=0 + 0 ;v184=nil;v182=1;end end else local v185=0 -0 ;local v186;local v187;local v188;local v189;local v190;while true do if (((8883 -5455)==(4179 -(81 + 670))) and (v185==(0 -(1674 -(1479 + 195))))) then local v275=0 -0 ;while true do if (((5439 -(310 + 1345))>(8348 -4586)) and (v275==(1368 -(935 + (1686 -1254))))) then v185=1 -(0 + 0) ;break;end if (((93 -(43 + 50))==v275) or ((2034 -(97 + (1273 -(405 + 82))))>=4011)) then v186=0 + 0 ;v187=nil;v275=1 + 0 ;end end end if ((v185==(1041 -(555 + 475 + 9))) or ((2784 + 1626)<=((1831 -(93 + 493)) -(401 + 137)))) then v190=nil;while true do if ((v186==(2 + 0)) or (4684<(3106 + 1078))) then for v323=v187,v83 do local v324=(610 -(346 + 264)) -0 ;local v325;local v326;while true do if (((8720 -4977)>=1445) and (v324==(0 -0))) then v325=0;v326=nil;v324=1;end if ((3157==(4782 -1625)) and (v324==(1 + 0))) then while true do if (((4273 -(5 + 11))<4485) and (v325==(0 -0))) then v326=1694 -(1384 + 310) ;while true do if (((0 + 0)==v326) or (((529 + 683) -(199 + 56))>=(3326 -2364))) then v190=v190 + (1597 -(1375 + 221)) ;v94[v323]=v188[v190];break;end end break;end end break;end end end break;end if (((3827 -(181 + 334))>=(2228 -(1067 + 778))) and (v186==(1 + 0))) then local v296=0;while true do if ((v296==(2 -1)) or ((1244 -(440 + 279))==(2315 -(279 + 425)))) then v186=2;break;end if ((v296==(0 -0)) or ((2417 -(1422 + 156))==(3741 -(1278 + 398)))) then v83=(v189 + v187) -1 ;v190=0 -0 ;v296=2 -1 ;end end end if ((v186==(0 + 0)) or (1237<(2683 -(6880 -4913)))) then local v297=0 + 0 ;local v298;while true do if (((4676 -(304 + 1009))==(8312 -4949)) and (v297==(676 -(308 + 368)))) then v298=0 -0 ;while true do if (((2066 + 1882)>(1072 -(1782 -1184))) and ((0 -(1078 -(741 + 337)))==v298)) then local v396=0 -0 ;while true do if ((2380>=(8177 -5991)) and (v396==(185 -(117 + 67)))) then v298=1 + 0 ;break;end if ((((4309 -(1091 + 258)) -1592)<=(2781 + 1861)) and (v396==(692 -(575 + 117)))) then v187=v96[1843 -((2463 -1260) + 638) ];v188,v189=v91(v94[v187](v13(v94,v187 + 1 ,v83)));v396=1;end end end if (((851 -(179 + 249 + 422))==v298) or ((197 + 257)>=(1269 + 3419))) then v186=2 -1 ;break;end end break;end end end end break;end if (((5474 -4102)<(1727 + 916)) and (v185==(1 -0))) then local v276=0 -0 ;while true do if ((v276==(256 -(81 + 174))) or ((430 -100)>835)) then v185=1 + 1 ;break;end if ((2435<=(2506 + 274)) and (v276==(0 + 0))) then v188=nil;v189=nil;v276=1 + 0 ;end end end end end elseif ((((269 -161) + 24)<=(3399 -2011)) and (v97<=(8 + 12))) then if (((3161 -(398 + 491))>17) and (v97<=(27 -9))) then v82=v96[2 + 1 ];elseif (((5140 -1801)>(17 + (4 -0))) and (v97>(47 -28))) then local v191=(0 + 0) -0 ;local v192;local v193;local v194;local v195;local v196;local v197;while true do if ((v191==(2 -0)) or ((1173 -798)<((4797 -2904) -(1198 + 638)))) then v196=nil;v197=nil;v191=292 -(169 + 120) ;end if ((v191==(1363 -(477 + 886))) or ((1778 -(909 + 453))>(94 + 104 + 226))) then v192=0 -0 ;v193=nil;v191=1 + 0 ;end if ((v191==((28 -15) -10)) or ((3472 -1725)>=(18724 -13951))) then while true do if (((4 -3)==v192) or ((5724 -2941)>4505)) then v195=nil;v196=nil;v192=2 -(0 -0) ;end if (((3612 -(1746 + 95))<=(1398 + 3021)) and (v192==2)) then v197=nil;while true do if ((((0 -0) + 0)==v193) or ((5095 -(580 + 394))<=(6994 -4020))) then local v349=0 -0 ;local v350;while true do if ((v349==(1550 -(1280 + 270))) or ((1234 + 439)>(2385 -(258 + 283)))) then v350=898 -(52 + 846) ;while true do if ((v350==(4 -3)) or ((1911 -(303 + 173))<=46)) then v193=(3 -2) -0 ;break;end if ((v350==(0 -0)) or (425==(1208 -358))) then local v412=0;while true do if (((0 + 0)==v412) or (4455<(1042 + 1608))) then v194=v96[4 -2 ];v195,v196=v91(v94[v194]());v412=1734 -(1386 + 347) ;end if (((1039 + 1869)==(3330 -(249 + 173))) and (v412==(4 -3))) then v350=1 + 0 ;break;end end end end break;end end end if ((1==v193) or ((1843 + 2167)<=(601 -340))) then local v351=0 -0 ;local v352;while true do if (((18428 -13856)>=(6062 -(673 + 1128 + 138))) and (v351==(0 + 0))) then v352=1098 -(395 + 703) ;while true do if (((12790 -7959)==(16984 -12153)) and (v352==(92 -(67 + 25)))) then local v413=0 + (0 -0) ;while true do if (((10451 -6657)>(2150 + 628)) and (v413==1)) then v352=2 -(1104 -(381 + 722)) ;break;end if ((v413==(0 -(0 + 0))) or ((6853 -(3143 -978))>=((4026 + 973) -(73 + 31)))) then v83=(v196 + v194) -(2 -1) ;v197=0 -0 ;v413=2 -1 ;end end end if ((v352==(1 + 0)) or (4684<(149 + 273))) then v193=788 -(277 + 509) ;break;end end break;end end end if (((5670 -(607 + 130))>(2623 + (6219 -4348))) and (v193==(1386 -(1238 + (1701 -(220 + 1335)))))) then for v368=v194,v83 do local v369=0 -0 ;local v370;while true do if (((0 + 0)==v369) or ((4287 -(522 + 859))>=(1716 + 3095))) then v370=1355 -(530 + 825) ;while true do if (((3150 + 1311)>(64 -25)) and (v370==0)) then v197=v197 + 1 + 0 ;v94[v368]=v195[v197];break;end end break;end end end break;end end break;end if (((1609 -(333 + 867))<=(2493 -1653)) and (v192==(1543 -(461 + 1082)))) then v193=0 -(0 -0) ;v194=nil;v192=1 + 0 ;end end break;end if (((2995 -1554)<((4769 -2142) + 1626)) and (v191==(3 -2))) then v194=nil;v195=nil;v191=1416 -(285 + 1129) ;end end else local v198=0;local v199;local v200;local v201;local v202;while true do if ((444==(1324 -(348 + 532))) and (v198==(348 -(220 + 126)))) then while true do if (((73 + 72)<(4431 -(831 + 67))) and (v199==(1915 -(810 + 1104)))) then v202=nil;while true do if ((v200==((815 -556) -(32 + 227))) or ((70 + 6)>=(6780 -(1305 + 683)))) then local v353=0;while true do if ((v353==(1 + 0)) or (((584 -(392 + 51)) + 1969)==(9195 -6165))) then v200=1;break;end if ((v353==(0 -0)) or ((16736 -11959)>=(1412 + 3400))) then local v397=575 -(227 + (1090 -(616 + 126))) ;while true do if ((v397==((36 + 66) -(99 + 3))) or ((2546 -2010)==(5366 -(878 + 1020)))) then v201=v96[2];v202={};v397=1 -0 ;end if ((v397==1) or ((648 -(23 + 12 + 298))>((22321 -10847) -6870))) then v353=1;break;end end end end end if (((12998 -(13585 -4708))<=(5368 -1185)) and (v200==(3 -2))) then for v371=2 -1 , #v93 do local v372=528 -(359 + 169) ;local v373;local v374;while true do if ((v372==(1 -0)) or ((5106 -(220 + 151))<=(131 + 276 + 1212))) then while true do if (((2295 -(732 + 1012))==551) and (v373==(0 -0))) then v374=v93[v371];for v436=0 + (890 -(834 + 56)) , #v374 do local v437=1144 -(556 + 588) ;local v438;local v439;local v440;local v441;while true do if ((v437==(0 -0)) or ((831 + 2655)>=(6405 -((2336 -(1159 + 498)) + 795)))) then v438=0;v439=nil;v437=1 + 0 ;end if ((v437==2) or ((15688 -11037)<(338 + 475))) then while true do if (((4581 -1391)>(12937 -10250)) and (v438==(0 -0))) then local v456=(0 + 0) -0 ;while true do if (((2173 + 912)<=(3994 -(673 + 167))) and (v456==(1 -0))) then v438=1 + 0 ;break;end if ((v456==(1139 -(401 + 738))) or (1484==4817)) then v439=v374[v436];v440=v439[1];v456=1 -0 ;end end end if (((2 -1)==v438) or ((920 + 2572)<(1888 -(206 + 638)))) then v441=v439[5 -3 ];if ((3074>(471 + 513)) and (v440==v94) and (v441>=v201)) then local v463=0 + 0 ;local v464;local v465;while true do if ((v463==(0 -0)) or ((3910 -(102 + 326))<=(159 + 128))) then v464=0 + 0 ;v465=nil;v463=(3 -2) + 0 ;end if ((1==v463) or ((1917 -(614 + 295))>=(1604 + 1519))) then while true do if ((v464==0) or ((650 + 560)>(3536 -(567 + 375)))) then v465=0;while true do if ((v465==0) or (2324==((5790 -(55 + 953)) -(542 + 11)))) then v202[v441]=v440[v441];v439[1941 -(170 + (3558 -(1766 + 22))) ]=v202;break;end end break;end end break;end end end break;end end break;end if ((v437==1) or ((135 + 553)==(3873 -(54 + 478)))) then v440=nil;v441=nil;v437=2;end end end break;end end break;end if ((748<(3847 -2789)) and (v372==(1962 -(510 + 1452)))) then v373=0 + 0 ;v374=nil;v372=(1 -0) + 0 ;end end end break;end end break;end if ((v199==(0 + 0)) or ((1133 + 467)>=(1826 + 2255))) then local v299=0;while true do if (((2096 + 2553)>(1613 + 810)) and (v299==0)) then v200=0 + 0 ;v201=nil;v299=1 + 0 ;end if (((968 -(502 + 465))==v299) or ((3287 -936)<=533)) then v199=1;break;end end end end break;end if ((v198==(4 -3)) or (4510<=((131 + 803) -((274 -109) + 397)))) then v201=nil;v202=nil;v198=1 + 1 ;end if (((857 + 509)<=(5027 -(143 + 4))) and (v198==0)) then v199=0 + 0 ;v200=nil;v198=1 + 0 ;end end end elseif ((v97<=(78 -56)) or ((442 + 3453)<=(9005 -(2305 + 3444)))) then if ((v97>(6 + (864 -(649 + 200)))) or ((2657 + 759)==(21004 -16764))) then local v203=1984 -(496 + 1488) ;local v204;local v205;local v206;local v207;while true do if ((v203==((1 + 0) -0)) or (883>(7550 -3233))) then v206=nil;v207=nil;v203=1277 -(288 + 987) ;end if (((5537 -(845 + 642))>=2059) and (v203==(1374 -(69 + 1303)))) then while true do if ((1260<(13328 -10311)) and (v204==(0 -0))) then local v300=0;while true do if ((923<=(12320 -(25776 -15943))) and (v300==(1760 -(851 + 908)))) then v204=1;break;end if (((1505 -(67 + 1))>=(70 + 131)) and (v300==(0 -0))) then v205=v89[v96[3]];v206=nil;v300=2 -(1 + 0) ;end end end if ((v204==(4 -2)) or ((2566 + 666)<=(1959 -1221))) then for v327=1 + 0 ,v96[6 -2 ] do local v328=0;local v329;local v330;while true do if (((0 -0)==v328) or ((3479 + 913)==(4186 -2334))) then v329=0;v330=nil;v328=1614 -(1152 + 461) ;end if ((v328==(2 -(2 -1))) or ((3101 + 290)<=2983)) then while true do if (((4992 -(845 + 873))==(8596 -5322)) and (v329==0)) then local v408=0 -0 ;while true do if ((v408==(1 + 0)) or ((5264 -(974 + 347))<=(497 + (1171 -403)))) then v329=(1203 -(423 + 123)) -(23 + 59 + 574) ;break;end if (((2641 -(335 + 674))==(2259 -(103 + 524))) and (v408==(556 -(196 + 218 + 142)))) then v82=v82 + (4 -3) ;v330=v88[v82];v408=1;end end end if ((v329==(1 + 0)) or ((1516 -632)==(1899 + 1042))) then if (((2765 -(155 + 900 + 42))<(7906 -(5960 -(838 + 675)))) and (v330[1 -0 ]==(65 -(1436 -(1269 + 130))))) then v207[v327-(2 -1) ]={v94,v330[2 + 1 ]};else v207[v327-1 ]={v33,v330[1113 -(84 + 1026) ]};end v93[ #v93 + 1 ]=v207;break;end end break;end end end v94[v96[(1578 -(711 + 416)) -(151 + 298) ]]=v30(v205,v206,v34);break;end if (((1538 -653)<(18386 -14552)) and (v204==1)) then local v302=908 -(602 + 306) ;while true do if ((v302==(1 -0)) or ((2380 -(39 + 48 + 367))>=(10010 -7699))) then v204=249 -(14 + 233) ;break;end if (((3447 + 1274)==(18107 -13386)) and (v302==(0 + 0))) then v207={};v206=v10({},{__index=function(v355,v356)local v375=0;local v376;local v377;while true do if (((3933 -2346)>=1431) and (v375==1)) then while true do if (((1284 + 2763)>=(2581 -(1545 + 438))) and (v376==0)) then local v428=0;while true do if ((v428==(0 -0)) or ((4464 -1600)>=3919)) then v377=v207[v356];return v377[1107 -(303 + 803) ][v377[8 -6 ]];end end end end break;end if (((3482 -(233 + 14))>(1390 + (1996 -1122))) and (v375==0)) then v376=0 + 0 ;v377=nil;v375=1;end end end,__newindex=function(v355,v356,v357)local v378=0 -0 ;local v379;local v380;local v381;while true do if ((v378==(0 -(688 -(383 + 305)))) or ((3326 + 165)>=(944 + 3559))) then v379=0 + 0 ;v380=nil;v378=1 + 0 ;end if ((4416<(5959 -((1725 -(868 + 15)) + 164))) and (v378==((1 -0) -0))) then v381=nil;while true do if ((v379==1) or (((1671 + 655) -(1481 + 325))<(1662 -(447 + (3229 -2050))))) then while true do if (((3995 -(786 + 722))==(3766 -(139 + 418 + 722))) and (v380==0)) then v381=v207[v356];v381[448 -(415 + 32) ][v381[1 + 1 ]]=v357;break;end end break;end if ((v379==(0 + 0)) or (3853<(10403 -6919))) then local v429=0 + 0 ;while true do if (((2513 + 1880)==4393) and (v429==((368 + 479) -(773 + 73)))) then v379=1425 -(748 + 676) ;break;end if ((v429==(135 -(8 + 127))) or ((4143 -1750)==(3752 -2850))) then v380=0 -0 ;v381=nil;v429=1;end end end end break;end end end});v302=2 -1 ;end end end end break;end if ((v203==((478 -(188 + 290)) + (1820 -(443 + 1377)))) or (4941<((13259 -(796 + 392)) -7969))) then v204=0;v205=nil;v203=1 -0 ;end end else local v208=429 -(347 + 82) ;local v209;local v210;local v211;while true do if ((v208==(0 + 0)) or (257>=(1064 + 3021))) then v209=0 + (526 -(53 + 473)) ;v210=nil;v208=1 + 0 ;end if (((6017 -3012)>(2796 -1646)) and ((1971 -(1427 + 543))==v208)) then v211=nil;while true do if (((8444 -4881)<(3541 + 731)) and (v209==(1 + 0))) then v94[v210 + (2 -1) ]=v211;v94[v210]=v211[v96[1712 -(1056 + 652) ]];break;end if ((v209==(0 -0)) or ((285 -187)>=(9147 -6036))) then v210=v96[4 -2 ];v211=v94[v96[9 -6 ]];v209=2 -(2 -1) ;end end break;end end end elseif (((8557 -6258)==(7322 -5023)) and (v97>23)) then local v212=0;local v213;local v214;while true do if (((101 + 1399)<=2513) and ((160 -(90 + 70))==v212)) then local v277=0;while true do if (((2536 -1761)<=(2683 -942)) and (v277==(1931 -(80 + 1851)))) then v213=1013 -(728 + 285) ;v214=nil;v277=1767 -(1174 + 592) ;end if (((10927 -8209)<=(1785 + 1808)) and (v277==(1668 -(75 + 1592)))) then v212=720 -(202 + 517) ;break;end end end if ((v212==(1028 -(1017 + 10))) or ((3367 -(314 + 408))>4124)) then while true do if (((852 + 2506)==(12447 -(7736 + 1353))) and (v213==(0 -0))) then v214=v96[7 -5 ];do return v13(v94,v214,v83);end break;end end break;end end else local v215=0 -0 ;local v216;local v217;local v218;while true do if (((621 -((1722 -1189) + 87))==v215) or ((2410 + 1305)<(85 + 500))) then v218=nil;while true do if ((v216==(2 -1)) or ((27 + 472)>1168)) then while true do if (((3800 -(1021 + 925))<=(3142 -(32 + 399))) and (v217==0)) then v218=v96[2 + 0 + 0 ];v94[v218](v13(v94,v218 + (1548 -(1527 + 20)) ,v83));break;end end break;end if (((1600 -(4 + 5 + 28))<=1776) and (v216==0)) then local v309=0 -0 ;while true do if ((v309==(0 -0)) or ((10065 -8001)==2552)) then v217=0 + 0 ;v218=nil;v309=1 + 0 ;end if (((4221 -2747)<(2095 + 126)) and (v309==(3 -(3 -1)))) then v216=3 -(2 + 0) ;break;end end end end break;end if ((v215==(0 -0)) or ((5261 -2791)==(3986 -(1212 + 65)))) then v216=0 -(0 -0) ;v217=nil;v215=1705 -(556 + 1148) ;end end end elseif ((4704>=4442) and (v97<=(84 -47))) then if ((v97<=(58 -28)) or (2247<=(31 + 26))) then if ((v97<=(19 + 8)) or ((2549 + 2425)==(1339 -633))) then if ((360<=(2659 + 361)) and (v97<=25)) then v94[v96[3 -(1 -0) ]]=v96[(54 -43) -8 ]~=0 ;elseif ((1650<(2367 + 2518)) and (v97>(109 -(70 + 13)))) then local v219=0;local v220;local v221;local v222;local v223;while true do if ((v219==(5 -3)) or ((203 + 109)>=2516)) then while true do if ((v220==(1858 -(1742 + 116))) or (2504<=(1425 -((799 -380) + 245)))) then v221=v96[2];v222=v94[v221 + (1791 -(1603 + 186)) ];v220=1 + 0 ;end if (((12456 -9361)>=(6979 -4365)) and (v220==((73 + 1854) -(1805 + 120)))) then if (((1453 -(246 + 438))<(3702 -(352 + 377))) and (v222>(1578 -(169 + 1409)))) then if (((1822 + 493)==2315) and (v223<=v94[v221 + (1226 -(546 + 679)) ])) then local v382=0 + 0 ;local v383;while true do if ((1152<(6623 -4634)) and (v382==(0 -0))) then v383=1428 -(165 + 1263) ;while true do if ((4075>(6761 -(5185 -(520 + 8)))) and (v383==(0 + 0))) then v82=v96[350 -(66 + 281) ];v94[v221 + (1166 -(784 + 379)) ]=v223;break;end end break;end end end elseif ((v223>=v94[v221 + (1 -0) ]) or ((1352 + 2195)<3195)) then local v384=0;local v385;while true do if (((3518 -(55 + 479))>=(1347 -898)) and (v384==(924 -((2653 -1779) + 50)))) then v385=452 -(317 + 135) ;while true do if ((((1300 + 7334) -4847)<(5713 -(30 + 1762))) and (v385==(1697 -(504 + 1193)))) then v82=v96[1428 -(56 + 1369) ];v94[v221 + (7 -4) ]=v223;break;end end break;end end end break;end if ((v220==(1 -0)) or ((2995 -(563 + 21))>(5166 -(151 + 177)))) then local v312=0 + 0 ;while true do if ((((3064 -(982 + 90)) -(491 + 36))>=902) and ((0 -0)==v312)) then v223=v94[v221] + v222 ;v94[v221]=v223;v312=2 -1 ;end if ((3111>=(6224 -4097)) and (v312==(1 + (0 -0)))) then v220=2;break;end end end end break;end if ((4589>4511) and (v219==((4 -3) + 0))) then v222=nil;v223=nil;v219=89 -(8 + 79) ;end if ((v219==(0 -0)) or (2313>=((2809 -(416 + 97)) + 1366))) then v220=0 + 0 ;v221=nil;v219=1922 -(1281 + (1021 -381)) ;end end else v94[v96[2]]=v34[v96[261 -((1275 -(36 + 1128)) + 147) ]];end elseif ((v97<=(93 -65)) or ((4873 -(393 + 106))==2322)) then v94[v96[1697 -(388 + 1307) ]]=v94[v96[3]];elseif ((v97==((46 + 65) -82)) or ((100 + 331)>4235)) then v94[v96[(2 + 3) -(2 + 1) ]]={};else local v227=1724 -(682 + 1042) ;local v228;local v229;local v230;local v231;while true do if (((4081 + 562)>(457 + (447 -294))) and (v227==(0 -0))) then v228=0 + 0 ;v229=nil;v227=1 + 0 ;end if ((((2509 -(213 + 1593)) + (4844 -2191))>=194) and (v227==(1927 -(1194 + (2350 -1619))))) then while true do if ((v228==(0 -0)) or ((600 -(28 + 278 + 177))>(5375 -((4145 -2637) + 312)))) then local v313=1700 -((1438 -(599 + 114)) + 975) ;while true do if (((2808 -(56 + 130))==(4414 -((1910 -(385 + 607)) + 874))) and (v313==((1715 -(333 + 930)) -(209 + 242)))) then v228=1 + 0 ;break;end if ((v313==((539 + 584) -(526 + 597))) or ((8642 -6121)>=(8802 -5836))) then v229=v96[(10 -5) -3 ];v230=v94[v229];v313=1;end end end if ((v228==(1 + (0 -0))) or (((24792 -16591) -4376)==3402)) then v231=v94[v229 + (1137 -(818 + 317)) ];if ((v231>(0 + 0 + (0 -0))) or ((1835 -(469 + 179))>=(5241 -(1479 + 217)))) then if ((v230>v94[v229 + 1 ]) or ((2772 + 730)<=3283)) then v82=v96[1 + 2 ];else v94[v229 + (5 -2) ]=v230;end elseif (((8841 -(1245 + 4176))<=((8955 -(518 + 689)) -3666)) and (v230<v94[v229 + (728 -(487 + 240)) ])) then v82=v96[898 -(862 + 33) ];else v94[v229 + 3 + 0 ]=v230;end break;end end break;end if (((2981 -(457 + 130))>2040) and (v227==((1464 -(1213 + 250)) + 0))) then v230=nil;v231=nil;v227=1989 -(993 + 994) ;end end end elseif (((2619 + 1813)==(2252 + 2180)) and (v97<=(143 -(195 -(33 + 52))))) then if (((315 + 1190)==1505) and (v97<=(105 -74))) then v94[v96[2]]=v94[v96[85 -(49 + 33) ]][v96[2 + 2 ]];elseif (((2144 -643)>(1680 -(88 + (755 -(281 + 294))))) and (v97==(27 + 5))) then v94[v96[2 + 0 ]]=v96[3] + v94[v96[4 + (0 -0) ]] ;else local v233=0;local v234;local v235;local v236;local v237;local v238;local v239;while true do if ((v233==(11 -8)) or ((5853 -3157)<(902 + 745))) then while true do if (((140 -(25 + 114))==v234) or ((1402 + 128)<976)) then v237=nil;v238=nil;v234=2;end if ((v234==(1672 -(1026 + 646))) or ((1007 -(157 + 37))>((531 + 3390) -(21 + 283)))) then local v315=0 + 0 ;while true do if ((v315==(1 + 0)) or (((1140 -(248 + 202)) -340)==(1938 -978))) then v234=1391 -(448 + 942) ;break;end if (((1665 + 15)<=(4770 -(1647 + 24))) and (v315==0)) then v235=234 -(24 + 210) ;v236=nil;v315=1 -0 ;end end end if ((v234==(519 -(17 + 329 + 130 + 41))) or ((7996 -3726)<=4076)) then v239=nil;while true do if (((0 + 0)==v235) or (3927<=(4216 -(194 + 1407)))) then local v362=0 -(1363 -(1182 + 181)) ;local v363;while true do if ((0==v362) or ((13949 -10123)<(1253 -(223 + 847)))) then v363=0;while true do if (((1531 + 1053)>371) and (v363==(1 + 0))) then v235=1;break;end if ((v363==(0 + 0)) or (1965>=(3534 -(275 + 640)))) then local v417=(0 -0) -0 ;while true do if ((((260 + 930) -(339 + 850))==v417) or (911==(8630 -5307))) then v363=(3882 -2227) -(435 + 1219) ;break;end if (((2850 + 288)<=4659) and (v417==((1431 -(303 + 1128)) -0))) then v236=v96[(1470 -(302 + 1163)) -(1 + 2) ];v237,v238=v91(v94[v236](v13(v94,v236 + (1395 -(54 + 1340)) + 0 ,v96[1419 -(730 + 48 + 638) ])));v417=1 -0 ;end end end end break;end end end if ((((3575 -(92 + 150)) + 132)>=((5701 -3406) -(589 + 730))) and (v235==(684 -(38 + 85 + 560)))) then local v364=0;local v365;while true do if ((v364==(0 + 0)) or ((2328 -(150 + 781))>=(7287 -5538))) then v365=0;while true do if (((3025 -1890)<=((7764 + 3294) -7745)) and (v365==0)) then local v418=0 -0 ;while true do if ((v418==(1 -0)) or ((4514 -3117)<(97 + 697))) then v365=2 -1 ;break;end if ((((6010 -4158) -(25 + 348 + 218))>(633 -346)) and ((0 -0)==v418)) then v83=(v238 + v236) -(3 -2) ;v239=0 -0 ;v418=1918 -(517 + 1400) ;end end end if (((1359 -((2151 -903) + 110))==v365) or ((2606 + 1700)<=(971 + 398))) then v235=785 -(388 + 395) ;break;end end break;end end end if ((v235==(4 -2)) or (((3725 -(998 + 91)) -1651)>=(3930 -1525))) then for v390=v236,v83 do local v391=322 -(222 + 100) ;local v392;while true do if ((822==(1564 -742)) and (v391==(1407 -(608 + 799)))) then v392=1577 -(1293 + 229 + 55) ;while true do if ((v392==((570 + 151) -(14 + 707))) or (3076>=4112)) then v239=v239 + 1 + 0 ;v94[v390]=v237[v239];break;end end break;end end end break;end end break;end end break;end if (((518 + 178)<(2819 + 578)) and (v233==(1 + 0))) then v236=nil;v237=nil;v233=2;end if (((1020 + 501 + 2502)>=(3858 -(58 + 46))) and (v233==0)) then v234=0 + 0 ;v235=nil;v233=1 + 0 ;end if (((8640 -6247)==(8535 -6142)) and (v233==2)) then v238=nil;v239=nil;v233=3;end end end elseif ((((295 + 645) -(147 + 23 + 45))<(5123 -(137 + 1451))) and (v97<=(42 -7))) then if ((v97==(23 + 11)) or ((3747 + 401)<(77 -37))) then if (((10082 -5622)>=(5754 -(435 + 1076))) and  not v94[v96[2 -0 ]]) then v82=v82 + 1 + (1896 -(1872 + 24)) ;else v82=v96[6 -(8 -5) ];end else v94[v96[1 + 1 ]][v94[v96[2 + 1 ]]]=v94[v96[3 + (2 -1) ]];end elseif (((3939 -(152 + 1))<4385) and (v97==(1874 -(1659 + 179)))) then if ((4869>(1193 + 2148)) and (v94[v96[6 -4 ]]~=v96[1558 -((2623 -(107 + 1623)) + 661) ])) then v82=v82 + (3 -2) ;else v82=v96[3];end else v94[v96[2]]=v94[v96[3]]%v94[v96[(659 -(192 + 196)) -(125 + 142) ]] ;end elseif (((707 + 1116)<=4987) and (v97<=(74 -31))) then if ((v97<=(1658 -(987 + 631))) or (3212>(8602 -4860))) then if ((v97<=(4 + 4 + 30)) or ((2914 -(144 + 423))>=(6915 -4565))) then local v146=0 + 0 + 0 ;local v147;local v148;local v149;local v150;local v151;local v152;while true do if ((v146==(1954 -(1021 + 933))) or (889==(1317 -(358 + 346)))) then v147=237 -(193 + 44) ;v148=nil;v146=1 + 0 ;end if ((3==v146) or ((6088 -(140 + 1530))==3937)) then while true do if ((v147==(586 -(400 + (760 -576)))) or ((3134 -991)==(202 -160))) then local v284=383 -((1053 -(392 + 365)) + 87) ;while true do if ((0==v284) or ((1929 -(255 + 322))<(660 + 10))) then for v334=1,v149 do v94[v150 + v334 ]=v151[v334];end v152=v151[1 + 0 ];v284=2 -1 ;end if ((v284==(1356 -(1112 + 243))) or ((2030 -(28 + 1427))>=4806)) then v147=1218 -(627 + 588) ;break;end end end if (((14393 -10441)>(2008 -(571 + 619))) and (v147==3)) then if (((7346 -2852)>=(548 + (811 -285))) and v152) then local v316=0 + 0 ;local v317;local v318;while true do if (((374 + 3804)>=(16488 -12310)) and ((0 -0)==v316)) then v317=0;v318=nil;v316=1;end if (((1 + 0)==v316) or ((1893 + 842)<=(542 + 94))) then while true do if ((v317==(1965 -(294 + 1671))) or (4090==(1807 -(442 + 1176)))) then v318=559 -(156 + 403) ;while true do if (((5468 -(527 + 732))>=(5699 -4390)) and (v318==(1760 -((4391 -3097) + 466)))) then v94[v150]=v152;v82=v96[361 -(310 + 48) ];break;end end break;end end break;end end else v82=v82 + 1 + 0 ;end break;end if ((v147==(1 + 0)) or ((19 + 4446)<(1713 -(166 + 125)))) then v150=v148 + (3 -1) ;v151={v94[v148](v94[v148 + (191 -(53 + 137)) ],v94[v150])};v147=2 + 0 ;end if (((0 + 0)==v147) or ((6161 -1708)<=(3609 -(11 + 428 + 85)))) then local v285=0 + 0 ;while true do if (((6175 -3735)>=2269) and (v285==(0 -0))) then v148=v96[2 -0 ];v149=v96[736 -(327 + 405) ];v285=(1856 -1066) -(145 + 644) ;end if (((9 + 50)<3047) and (v285==(3 -2))) then v147=547 -(512 + 34) ;break;end end end end break;end if (((2542 + 730)<(16804 -13201)) and ((500 -(270 + 83 + 146))==v146)) then v149=nil;v150=nil;v146=(23 -17) -4 ;end if (((6 -4)==v146) or (((3582 -(1101 + 437)) + 783)<=(1447 -551))) then v151=nil;v152=nil;v146=11 -8 ;end end elseif (((2062 + 2687)>(3096 -(131 + 989))) and (v97==(1101 -((1119 -700) + 643)))) then v94[v96[2]]=v33[v96[10 -7 ]];else v34[v96[7 -4 ]]=v94[v96[1 + 1 ]];end elseif ((v97<=(105 -64)) or (2249>=((15587 -(253 + 1445)) -(11561 -(175 + 1771))))) then do return;end elseif (((5935 -(646 + 654))==4635) and (v97==42)) then v94[v96[4 -2 ]]=v94[v96[8 -5 ]]%v96[4] ;else v94[v96[2]][v96[1 + 2 ]]=v96[782 -(739 + 29 + 10) ];end elseif ((v97<=(40 + 6)) or (((31225 -22242) -4380)<(154 + 7))) then if ((v97<=44) or ((1907 + 1248)==(21334 -(14752 + 1794)))) then if (((4912 -(308 + 115 + 521))<=(5241 -(652 + 352))) and (v96[93 -(29 + 62) ]==v94[v96[11 -7 ]])) then v82=v82 + 1 + 0 ;else v82=v96[2 + (1 -0) ];end elseif ((v97>(63 -18)) or (2133==(2851 + 1489))) then local v251=0;local v252;local v253;local v254;local v255;while true do if (((3384 + 1169)==(5078 -(37 + 488))) and (v251==(1440 -(39 + 1399)))) then for v286=v252,v83 do local v287=(61 -(44 + 17)) + 0 ;local v288;while true do if (((3433 -(1828 + 73))<(3702 -(420 + 790))) and (v287==(132 -(71 + 61)))) then v288=0;while true do if (((5367 -1599)>1778) and (v288==(0 -0))) then v255=v255 + (4 -3) ;v94[v286]=v253[v255];break;end end break;end end end break;end if (((2699 -(452 + 481))<(3714 -((1299 -(917 + 138)) + 654))) and (v251==1)) then local v278=0 + 0 ;while true do if ((v278==(86 -(38 + 47))) or (260>=((8286 + 6951) -10643))) then v251=2 + 0 ;break;end if (((4930 -(404 + 471))<(5069 -(56 + (1038 -(616 + 351))))) and (v278==(0 -0))) then v83=(v254 + v252) -(1 + 0) ;v255=0 -0 ;v278=(437 -(167 + 266)) -3 ;end end end if ((v251==((1782 -(599 + 1183)) + 0)) or ((1010 + 3903)<(4818 -(674 + 164)))) then v252=v96[(1 + 4) -3 ];v253,v254=v91(v94[v252](v94[v252 + 1 ]));v251=1;end end else v94[v96[1968 -(1528 + 438) ]][v96[3 + 0 ]]=v94[v96[11 -7 ]];end elseif ((v97<=(642 -(21 + 573))) or ((9558 -6901)>(1565 + 2459))) then if (((11080 -6815)>488) and (v97>47)) then local v258=0 -0 ;local v259;local v260;while true do if ((3134>=((1656 -(739 + 847)) + 165)) and (v258==(661 -(235 + 426)))) then v259=0 -0 ;v260=nil;v258=(433 -(42 + 390)) + 0 ;end if (((3777 + 972)>(2355 -(151 + 367 + 462))) and (v258==((750 -(206 + 540)) -3))) then while true do if ((v259==(0 -0)) or (3872<=(2008 + 318))) then v260=v96[8 -6 ];v94[v260](v13(v94,v260 + 1 + 0 ,v96[4 -1 ]));break;end end break;end end elseif (((18113 -14108)>=(1949 + 566)) and (v94[v96[851 -(232 + 285 + 332) ]]~=v94[v96[(6 -3) + 1 ]])) then v82=v82 + 1 ;else v82=v96[3 + 0 ];end elseif ((v97==(36 + 13)) or ((12767 -8380)==831)) then v94[v96[1 + 1 ]]=v94[v96[3]] + v96[1639 -(1378 + 257) ] ;else v94[v96[1940 -(1175 + 763) ]]=v30(v89[v96[1666 -((1512 -557) + 708) ]],nil,v34);end v82=v82 + (709 -(638 + 70)) ;break;end end break;end end break;end end end end A,B=v28(v11(v86));if  not A[1] then local v106=v32[4][v82] or "?" ;error("Script error at ["   .. v106   .. "]:"   .. A[2] );else return v13(A,2,B);end end;end end end;return v30(v29(),{},v17)(...);end if (0==v18) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v35)if (v1(v35,2)==79) then local v70=0;while true do if (v70==0) then v20=v0(v3(v35,1,1));return "";end end else local v71=0;local v72;while true do if (v71==0) then v72=v2(v0(v35,16));if v20 then local v107=0;local v108;while true do if (v107==0) then v108=v5(v72,v20);v20=nil;v107=1;end if (v107==1) then return v108;end end else return v72;end break;end end end end);v21=nil;v18=1;end if (1==v18) then v21=function(v36,v37,v38)if v38 then local v73=0;local v74;while true do if (v73==(0 + 0)) then v74=(v36/((4 -2)^(v37-(854 -(427 + 426)))))%((2 -0)^(((v38-(1 + 0)) -(v37-((2157 -(979 + 182)) -(66 + 929)))) + ((1 + 2) -2))) ;return v74-(v74%(736 -(616 + 119))) ;end end else local v75=(6 -4)^(v37-((4 -1) -2)) ;return (((v36%(v75 + v75))>=v75) and 1) or (20 -(17 + 3)) ;end end;v22=nil;v22=function()local v68=0 -0 ;local v69;while true do if (v68==(1516 -(735 + 780))) then return v69;end if (v68==(270 -(60 + 210))) then v69=v1(v16,v19,v19);v19=v19 + 1 + 0 ;v68=704 -(520 + 183) ;end end end;v23=nil;v18=2;end end end vv9(),...);end
